
CH_10_02.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000003a  00800100  00000730  000007c4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000730  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  0080013a  0080013a  000007fe  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000007fe  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000085c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000070  00000000  00000000  0000089c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000004ab  00000000  00000000  0000090c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000352  00000000  00000000  00000db7  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000003a0  00000000  00000000  00001109  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000f0  00000000  00000000  000014ac  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000026c  00000000  00000000  0000159c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000002c7  00000000  00000000  00001808  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000068  00000000  00000000  00001acf  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e0 e3       	ldi	r30, 0x30	; 48
  a0:	f7 e0       	ldi	r31, 0x07	; 7
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	aa 33       	cpi	r26, 0x3A	; 58
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	aa e3       	ldi	r26, 0x3A	; 58
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a0 34       	cpi	r26, 0x40	; 64
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	13 d0       	rcall	.+38     	; 0xea <main>
  c4:	33 c3       	rjmp	.+1638   	; 0x72c <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <ADC_init>:
FILE INPUT \
= FDEV_SETUP_STREAM(NULL, UART1_receive, _FDEV_SETUP_READ);

void ADC_init(unsigned char channel)
{
	ADMUX |= (1 << REFS0); 		// AVCC를 기준 전압으로 선택
  c8:	3e 9a       	sbi	0x07, 6	; 7
	
	ADCSRA |= 0x07;			// 분주비 설정
  ca:	96 b1       	in	r25, 0x06	; 6
  cc:	97 60       	ori	r25, 0x07	; 7
  ce:	96 b9       	out	0x06, r25	; 6
	ADCSRA |= (1 << ADEN);		// ADC 활성화
  d0:	37 9a       	sbi	0x06, 7	; 6
	ADCSRA |= (1 << ADFR);		// free running 모드
  d2:	35 9a       	sbi	0x06, 5	; 6

	ADMUX = ((ADMUX & 0xE0) | channel);	// 채널 선택
  d4:	97 b1       	in	r25, 0x07	; 7
  d6:	90 7e       	andi	r25, 0xE0	; 224
  d8:	89 2b       	or	r24, r25
  da:	87 b9       	out	0x07, r24	; 7
	ADCSRA |= (1 << ADSC);		// 변환 시작
  dc:	36 9a       	sbi	0x06, 6	; 6
  de:	08 95       	ret

000000e0 <read_ADC>:
}

int read_ADC(void)
{
	while(!(ADCSRA & (1 << ADIF)));	// 변환 종료 대기
  e0:	34 9b       	sbis	0x06, 4	; 6
  e2:	fe cf       	rjmp	.-4      	; 0xe0 <read_ADC>
	
	return ADC;				// 10비트 값을 반환
  e4:	84 b1       	in	r24, 0x04	; 4
  e6:	95 b1       	in	r25, 0x05	; 5
}
  e8:	08 95       	ret

000000ea <main>:

int main(void)
{
	int read;
	
	stdout = &OUTPUT;
  ea:	ea e3       	ldi	r30, 0x3A	; 58
  ec:	f1 e0       	ldi	r31, 0x01	; 1
  ee:	8e e0       	ldi	r24, 0x0E	; 14
  f0:	91 e0       	ldi	r25, 0x01	; 1
  f2:	93 83       	std	Z+3, r25	; 0x03
  f4:	82 83       	std	Z+2, r24	; 0x02
	stdin = &INPUT;
  f6:	80 e0       	ldi	r24, 0x00	; 0
  f8:	91 e0       	ldi	r25, 0x01	; 1
  fa:	91 83       	std	Z+1, r25	; 0x01
  fc:	80 83       	st	Z, r24
	
	UART1_init();				// UART 통신 초기화
  fe:	41 d0       	rcall	.+130    	; 0x182 <UART1_init>
	ADC_init(0);				// AD 변환기 초기화
 100:	80 e0       	ldi	r24, 0x00	; 0
 102:	e2 df       	rcall	.-60     	; 0xc8 <ADC_init>
	
	DDRB = 0xFF;				// 포트 B를 출력으로 설정
 104:	8f ef       	ldi	r24, 0xFF	; 255
 106:	87 bb       	out	0x17, r24	; 23
	
	while(1)
	{
		read = read_ADC();			// 가변저항 값 읽기

		uint8_t pattern = 0;			// LED 제어값
 108:	f1 2c       	mov	r15, r1
		int LED_count = (read >> 7) + 1;	// 켜질 LED의 개수

		for(int i = 0; i < LED_count; i++){	// LED 제어값 생성
 10a:	d1 2c       	mov	r13, r1
 10c:	e1 2c       	mov	r14, r1
			pattern |= (0x01 << i);
 10e:	c1 e0       	ldi	r28, 0x01	; 1
 110:	d0 e0       	ldi	r29, 0x00	; 0
		}

		PORTB = pattern;			// LED 켜기
		
		printf("Read : %d,\t%d LEDs are ON!\r\n", read, LED_count);
 112:	0c e1       	ldi	r16, 0x1C	; 28
 114:	11 e0       	ldi	r17, 0x01	; 1
	
	DDRB = 0xFF;				// 포트 B를 출력으로 설정
	
	while(1)
	{
		read = read_ADC();			// 가변저항 값 읽기
 116:	e4 df       	rcall	.-56     	; 0xe0 <read_ADC>
 118:	fc 01       	movw	r30, r24

		uint8_t pattern = 0;			// LED 제어값
		int LED_count = (read >> 7) + 1;	// 켜질 LED의 개수
 11a:	bc 01       	movw	r22, r24
 11c:	66 0f       	add	r22, r22
 11e:	67 2f       	mov	r22, r23
 120:	66 1f       	adc	r22, r22
 122:	77 0b       	sbc	r23, r23
 124:	6f 5f       	subi	r22, 0xFF	; 255
 126:	7f 4f       	sbci	r23, 0xFF	; 255

		for(int i = 0; i < LED_count; i++){	// LED 제어값 생성
 128:	16 16       	cp	r1, r22
 12a:	17 06       	cpc	r1, r23
 12c:	8c f4       	brge	.+34     	; 0x150 <main+0x66>
 12e:	2d 2d       	mov	r18, r13
 130:	3e 2d       	mov	r19, r14
 132:	9f 2d       	mov	r25, r15
			pattern |= (0x01 << i);
 134:	ae 01       	movw	r20, r28
 136:	02 2e       	mov	r0, r18
 138:	02 c0       	rjmp	.+4      	; 0x13e <main+0x54>
 13a:	44 0f       	add	r20, r20
 13c:	55 1f       	adc	r21, r21
 13e:	0a 94       	dec	r0
 140:	e2 f7       	brpl	.-8      	; 0x13a <main+0x50>
 142:	94 2b       	or	r25, r20
		read = read_ADC();			// 가변저항 값 읽기

		uint8_t pattern = 0;			// LED 제어값
		int LED_count = (read >> 7) + 1;	// 켜질 LED의 개수

		for(int i = 0; i < LED_count; i++){	// LED 제어값 생성
 144:	2f 5f       	subi	r18, 0xFF	; 255
 146:	3f 4f       	sbci	r19, 0xFF	; 255
 148:	26 17       	cp	r18, r22
 14a:	37 07       	cpc	r19, r23
 14c:	9c f3       	brlt	.-26     	; 0x134 <main+0x4a>
 14e:	01 c0       	rjmp	.+2      	; 0x152 <main+0x68>
	
	while(1)
	{
		read = read_ADC();			// 가변저항 값 읽기

		uint8_t pattern = 0;			// LED 제어값
 150:	9f 2d       	mov	r25, r15

		for(int i = 0; i < LED_count; i++){	// LED 제어값 생성
			pattern |= (0x01 << i);
		}

		PORTB = pattern;			// LED 켜기
 152:	98 bb       	out	0x18, r25	; 24
		
		printf("Read : %d,\t%d LEDs are ON!\r\n", read, LED_count);
 154:	7f 93       	push	r23
 156:	6f 93       	push	r22
 158:	ff 93       	push	r31
 15a:	ef 93       	push	r30
 15c:	1f 93       	push	r17
 15e:	0f 93       	push	r16
 160:	38 d0       	rcall	.+112    	; 0x1d2 <printf>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 162:	2f ef       	ldi	r18, 0xFF	; 255
 164:	83 ed       	ldi	r24, 0xD3	; 211
 166:	90 e3       	ldi	r25, 0x30	; 48
 168:	21 50       	subi	r18, 0x01	; 1
 16a:	80 40       	sbci	r24, 0x00	; 0
 16c:	90 40       	sbci	r25, 0x00	; 0
 16e:	e1 f7       	brne	.-8      	; 0x168 <main+0x7e>
 170:	00 c0       	rjmp	.+0      	; 0x172 <main+0x88>
 172:	00 00       	nop
 174:	0f 90       	pop	r0
 176:	0f 90       	pop	r0
 178:	0f 90       	pop	r0
 17a:	0f 90       	pop	r0
 17c:	0f 90       	pop	r0
 17e:	0f 90       	pop	r0
 180:	ca cf       	rjmp	.-108    	; 0x116 <main+0x2c>

00000182 <UART1_init>:
﻿#include <avr/io.h>

void UART1_init(void)
{
	UBRR1H = 0x00;			// 9600 보율로 설정
 182:	10 92 98 00 	sts	0x0098, r1	; 0x800098 <__TEXT_REGION_LENGTH__+0x7e0098>
	UBRR1L = 207;
 186:	8f ec       	ldi	r24, 0xCF	; 207
 188:	80 93 99 00 	sts	0x0099, r24	; 0x800099 <__TEXT_REGION_LENGTH__+0x7e0099>
	
	UCSR1A |= _BV(U2X1);			// 2배속 모드
 18c:	eb e9       	ldi	r30, 0x9B	; 155
 18e:	f0 e0       	ldi	r31, 0x00	; 0
 190:	80 81       	ld	r24, Z
 192:	82 60       	ori	r24, 0x02	; 2
 194:	80 83       	st	Z, r24
	// 비동기, 8비트 데이터, 패리티 없음, 1비트 정지 비트 모드
	UCSR1C |= 0x06;
 196:	ed e9       	ldi	r30, 0x9D	; 157
 198:	f0 e0       	ldi	r31, 0x00	; 0
 19a:	80 81       	ld	r24, Z
 19c:	86 60       	ori	r24, 0x06	; 6
 19e:	80 83       	st	Z, r24
	
	UCSR1B |= _BV(RXEN1);		// 송수신 가능
 1a0:	ea e9       	ldi	r30, 0x9A	; 154
 1a2:	f0 e0       	ldi	r31, 0x00	; 0
 1a4:	80 81       	ld	r24, Z
 1a6:	80 61       	ori	r24, 0x10	; 16
 1a8:	80 83       	st	Z, r24
	UCSR1B |= _BV(TXEN1);
 1aa:	80 81       	ld	r24, Z
 1ac:	88 60       	ori	r24, 0x08	; 8
 1ae:	80 83       	st	Z, r24
 1b0:	08 95       	ret

000001b2 <UART1_transmit>:
}

void UART1_transmit(char data)
{
	while( !(UCSR1A & (1 << UDRE1)) );	// 송신 가능 대기
 1b2:	eb e9       	ldi	r30, 0x9B	; 155
 1b4:	f0 e0       	ldi	r31, 0x00	; 0
 1b6:	90 81       	ld	r25, Z
 1b8:	95 ff       	sbrs	r25, 5
 1ba:	fd cf       	rjmp	.-6      	; 0x1b6 <UART1_transmit+0x4>
	UDR1 = data;				// 데이터 전송
 1bc:	80 93 9c 00 	sts	0x009C, r24	; 0x80009c <__TEXT_REGION_LENGTH__+0x7e009c>
 1c0:	08 95       	ret

000001c2 <UART1_receive>:
}

unsigned char UART1_receive(void)
{
	while( !(UCSR1A & (1<<RXC1)) );	// 데이터 수신 대기
 1c2:	eb e9       	ldi	r30, 0x9B	; 155
 1c4:	f0 e0       	ldi	r31, 0x00	; 0
 1c6:	80 81       	ld	r24, Z
 1c8:	88 23       	and	r24, r24
 1ca:	ec f7       	brge	.-6      	; 0x1c6 <UART1_receive+0x4>
	return UDR1;
 1cc:	80 91 9c 00 	lds	r24, 0x009C	; 0x80009c <__TEXT_REGION_LENGTH__+0x7e009c>
}
 1d0:	08 95       	ret

000001d2 <printf>:
 1d2:	cf 93       	push	r28
 1d4:	df 93       	push	r29
 1d6:	cd b7       	in	r28, 0x3d	; 61
 1d8:	de b7       	in	r29, 0x3e	; 62
 1da:	ae 01       	movw	r20, r28
 1dc:	4b 5f       	subi	r20, 0xFB	; 251
 1de:	5f 4f       	sbci	r21, 0xFF	; 255
 1e0:	fa 01       	movw	r30, r20
 1e2:	61 91       	ld	r22, Z+
 1e4:	71 91       	ld	r23, Z+
 1e6:	af 01       	movw	r20, r30
 1e8:	80 91 3c 01 	lds	r24, 0x013C	; 0x80013c <__data_end+0x2>
 1ec:	90 91 3d 01 	lds	r25, 0x013D	; 0x80013d <__data_end+0x3>
 1f0:	03 d0       	rcall	.+6      	; 0x1f8 <vfprintf>
 1f2:	df 91       	pop	r29
 1f4:	cf 91       	pop	r28
 1f6:	08 95       	ret

000001f8 <vfprintf>:
 1f8:	2f 92       	push	r2
 1fa:	3f 92       	push	r3
 1fc:	4f 92       	push	r4
 1fe:	5f 92       	push	r5
 200:	6f 92       	push	r6
 202:	7f 92       	push	r7
 204:	8f 92       	push	r8
 206:	9f 92       	push	r9
 208:	af 92       	push	r10
 20a:	bf 92       	push	r11
 20c:	cf 92       	push	r12
 20e:	df 92       	push	r13
 210:	ef 92       	push	r14
 212:	ff 92       	push	r15
 214:	0f 93       	push	r16
 216:	1f 93       	push	r17
 218:	cf 93       	push	r28
 21a:	df 93       	push	r29
 21c:	cd b7       	in	r28, 0x3d	; 61
 21e:	de b7       	in	r29, 0x3e	; 62
 220:	2c 97       	sbiw	r28, 0x0c	; 12
 222:	0f b6       	in	r0, 0x3f	; 63
 224:	f8 94       	cli
 226:	de bf       	out	0x3e, r29	; 62
 228:	0f be       	out	0x3f, r0	; 63
 22a:	cd bf       	out	0x3d, r28	; 61
 22c:	7c 01       	movw	r14, r24
 22e:	6b 01       	movw	r12, r22
 230:	8a 01       	movw	r16, r20
 232:	fc 01       	movw	r30, r24
 234:	17 82       	std	Z+7, r1	; 0x07
 236:	16 82       	std	Z+6, r1	; 0x06
 238:	83 81       	ldd	r24, Z+3	; 0x03
 23a:	81 ff       	sbrs	r24, 1
 23c:	b0 c1       	rjmp	.+864    	; 0x59e <__FUSE_REGION_LENGTH__+0x19e>
 23e:	ce 01       	movw	r24, r28
 240:	01 96       	adiw	r24, 0x01	; 1
 242:	4c 01       	movw	r8, r24
 244:	f7 01       	movw	r30, r14
 246:	93 81       	ldd	r25, Z+3	; 0x03
 248:	f6 01       	movw	r30, r12
 24a:	93 fd       	sbrc	r25, 3
 24c:	85 91       	lpm	r24, Z+
 24e:	93 ff       	sbrs	r25, 3
 250:	81 91       	ld	r24, Z+
 252:	6f 01       	movw	r12, r30
 254:	88 23       	and	r24, r24
 256:	09 f4       	brne	.+2      	; 0x25a <vfprintf+0x62>
 258:	9e c1       	rjmp	.+828    	; 0x596 <__FUSE_REGION_LENGTH__+0x196>
 25a:	85 32       	cpi	r24, 0x25	; 37
 25c:	39 f4       	brne	.+14     	; 0x26c <vfprintf+0x74>
 25e:	93 fd       	sbrc	r25, 3
 260:	85 91       	lpm	r24, Z+
 262:	93 ff       	sbrs	r25, 3
 264:	81 91       	ld	r24, Z+
 266:	6f 01       	movw	r12, r30
 268:	85 32       	cpi	r24, 0x25	; 37
 26a:	21 f4       	brne	.+8      	; 0x274 <vfprintf+0x7c>
 26c:	b7 01       	movw	r22, r14
 26e:	90 e0       	ldi	r25, 0x00	; 0
 270:	c7 d1       	rcall	.+910    	; 0x600 <fputc>
 272:	e8 cf       	rjmp	.-48     	; 0x244 <vfprintf+0x4c>
 274:	51 2c       	mov	r5, r1
 276:	31 2c       	mov	r3, r1
 278:	20 e0       	ldi	r18, 0x00	; 0
 27a:	20 32       	cpi	r18, 0x20	; 32
 27c:	a0 f4       	brcc	.+40     	; 0x2a6 <vfprintf+0xae>
 27e:	8b 32       	cpi	r24, 0x2B	; 43
 280:	69 f0       	breq	.+26     	; 0x29c <vfprintf+0xa4>
 282:	30 f4       	brcc	.+12     	; 0x290 <vfprintf+0x98>
 284:	80 32       	cpi	r24, 0x20	; 32
 286:	59 f0       	breq	.+22     	; 0x29e <vfprintf+0xa6>
 288:	83 32       	cpi	r24, 0x23	; 35
 28a:	69 f4       	brne	.+26     	; 0x2a6 <vfprintf+0xae>
 28c:	20 61       	ori	r18, 0x10	; 16
 28e:	2c c0       	rjmp	.+88     	; 0x2e8 <vfprintf+0xf0>
 290:	8d 32       	cpi	r24, 0x2D	; 45
 292:	39 f0       	breq	.+14     	; 0x2a2 <vfprintf+0xaa>
 294:	80 33       	cpi	r24, 0x30	; 48
 296:	39 f4       	brne	.+14     	; 0x2a6 <vfprintf+0xae>
 298:	21 60       	ori	r18, 0x01	; 1
 29a:	26 c0       	rjmp	.+76     	; 0x2e8 <vfprintf+0xf0>
 29c:	22 60       	ori	r18, 0x02	; 2
 29e:	24 60       	ori	r18, 0x04	; 4
 2a0:	23 c0       	rjmp	.+70     	; 0x2e8 <vfprintf+0xf0>
 2a2:	28 60       	ori	r18, 0x08	; 8
 2a4:	21 c0       	rjmp	.+66     	; 0x2e8 <vfprintf+0xf0>
 2a6:	27 fd       	sbrc	r18, 7
 2a8:	27 c0       	rjmp	.+78     	; 0x2f8 <vfprintf+0x100>
 2aa:	30 ed       	ldi	r19, 0xD0	; 208
 2ac:	38 0f       	add	r19, r24
 2ae:	3a 30       	cpi	r19, 0x0A	; 10
 2b0:	78 f4       	brcc	.+30     	; 0x2d0 <vfprintf+0xd8>
 2b2:	26 ff       	sbrs	r18, 6
 2b4:	06 c0       	rjmp	.+12     	; 0x2c2 <vfprintf+0xca>
 2b6:	fa e0       	ldi	r31, 0x0A	; 10
 2b8:	5f 9e       	mul	r5, r31
 2ba:	30 0d       	add	r19, r0
 2bc:	11 24       	eor	r1, r1
 2be:	53 2e       	mov	r5, r19
 2c0:	13 c0       	rjmp	.+38     	; 0x2e8 <vfprintf+0xf0>
 2c2:	8a e0       	ldi	r24, 0x0A	; 10
 2c4:	38 9e       	mul	r3, r24
 2c6:	30 0d       	add	r19, r0
 2c8:	11 24       	eor	r1, r1
 2ca:	33 2e       	mov	r3, r19
 2cc:	20 62       	ori	r18, 0x20	; 32
 2ce:	0c c0       	rjmp	.+24     	; 0x2e8 <vfprintf+0xf0>
 2d0:	8e 32       	cpi	r24, 0x2E	; 46
 2d2:	21 f4       	brne	.+8      	; 0x2dc <vfprintf+0xe4>
 2d4:	26 fd       	sbrc	r18, 6
 2d6:	5f c1       	rjmp	.+702    	; 0x596 <__FUSE_REGION_LENGTH__+0x196>
 2d8:	20 64       	ori	r18, 0x40	; 64
 2da:	06 c0       	rjmp	.+12     	; 0x2e8 <vfprintf+0xf0>
 2dc:	8c 36       	cpi	r24, 0x6C	; 108
 2de:	11 f4       	brne	.+4      	; 0x2e4 <vfprintf+0xec>
 2e0:	20 68       	ori	r18, 0x80	; 128
 2e2:	02 c0       	rjmp	.+4      	; 0x2e8 <vfprintf+0xf0>
 2e4:	88 36       	cpi	r24, 0x68	; 104
 2e6:	41 f4       	brne	.+16     	; 0x2f8 <vfprintf+0x100>
 2e8:	f6 01       	movw	r30, r12
 2ea:	93 fd       	sbrc	r25, 3
 2ec:	85 91       	lpm	r24, Z+
 2ee:	93 ff       	sbrs	r25, 3
 2f0:	81 91       	ld	r24, Z+
 2f2:	6f 01       	movw	r12, r30
 2f4:	81 11       	cpse	r24, r1
 2f6:	c1 cf       	rjmp	.-126    	; 0x27a <vfprintf+0x82>
 2f8:	98 2f       	mov	r25, r24
 2fa:	9f 7d       	andi	r25, 0xDF	; 223
 2fc:	95 54       	subi	r25, 0x45	; 69
 2fe:	93 30       	cpi	r25, 0x03	; 3
 300:	28 f4       	brcc	.+10     	; 0x30c <vfprintf+0x114>
 302:	0c 5f       	subi	r16, 0xFC	; 252
 304:	1f 4f       	sbci	r17, 0xFF	; 255
 306:	ff e3       	ldi	r31, 0x3F	; 63
 308:	f9 83       	std	Y+1, r31	; 0x01
 30a:	0d c0       	rjmp	.+26     	; 0x326 <vfprintf+0x12e>
 30c:	83 36       	cpi	r24, 0x63	; 99
 30e:	31 f0       	breq	.+12     	; 0x31c <vfprintf+0x124>
 310:	83 37       	cpi	r24, 0x73	; 115
 312:	71 f0       	breq	.+28     	; 0x330 <vfprintf+0x138>
 314:	83 35       	cpi	r24, 0x53	; 83
 316:	09 f0       	breq	.+2      	; 0x31a <vfprintf+0x122>
 318:	57 c0       	rjmp	.+174    	; 0x3c8 <vfprintf+0x1d0>
 31a:	21 c0       	rjmp	.+66     	; 0x35e <vfprintf+0x166>
 31c:	f8 01       	movw	r30, r16
 31e:	80 81       	ld	r24, Z
 320:	89 83       	std	Y+1, r24	; 0x01
 322:	0e 5f       	subi	r16, 0xFE	; 254
 324:	1f 4f       	sbci	r17, 0xFF	; 255
 326:	44 24       	eor	r4, r4
 328:	43 94       	inc	r4
 32a:	51 2c       	mov	r5, r1
 32c:	54 01       	movw	r10, r8
 32e:	14 c0       	rjmp	.+40     	; 0x358 <vfprintf+0x160>
 330:	38 01       	movw	r6, r16
 332:	f2 e0       	ldi	r31, 0x02	; 2
 334:	6f 0e       	add	r6, r31
 336:	71 1c       	adc	r7, r1
 338:	f8 01       	movw	r30, r16
 33a:	a0 80       	ld	r10, Z
 33c:	b1 80       	ldd	r11, Z+1	; 0x01
 33e:	26 ff       	sbrs	r18, 6
 340:	03 c0       	rjmp	.+6      	; 0x348 <vfprintf+0x150>
 342:	65 2d       	mov	r22, r5
 344:	70 e0       	ldi	r23, 0x00	; 0
 346:	02 c0       	rjmp	.+4      	; 0x34c <vfprintf+0x154>
 348:	6f ef       	ldi	r22, 0xFF	; 255
 34a:	7f ef       	ldi	r23, 0xFF	; 255
 34c:	c5 01       	movw	r24, r10
 34e:	2c 87       	std	Y+12, r18	; 0x0c
 350:	4c d1       	rcall	.+664    	; 0x5ea <strnlen>
 352:	2c 01       	movw	r4, r24
 354:	83 01       	movw	r16, r6
 356:	2c 85       	ldd	r18, Y+12	; 0x0c
 358:	2f 77       	andi	r18, 0x7F	; 127
 35a:	22 2e       	mov	r2, r18
 35c:	16 c0       	rjmp	.+44     	; 0x38a <vfprintf+0x192>
 35e:	38 01       	movw	r6, r16
 360:	f2 e0       	ldi	r31, 0x02	; 2
 362:	6f 0e       	add	r6, r31
 364:	71 1c       	adc	r7, r1
 366:	f8 01       	movw	r30, r16
 368:	a0 80       	ld	r10, Z
 36a:	b1 80       	ldd	r11, Z+1	; 0x01
 36c:	26 ff       	sbrs	r18, 6
 36e:	03 c0       	rjmp	.+6      	; 0x376 <vfprintf+0x17e>
 370:	65 2d       	mov	r22, r5
 372:	70 e0       	ldi	r23, 0x00	; 0
 374:	02 c0       	rjmp	.+4      	; 0x37a <vfprintf+0x182>
 376:	6f ef       	ldi	r22, 0xFF	; 255
 378:	7f ef       	ldi	r23, 0xFF	; 255
 37a:	c5 01       	movw	r24, r10
 37c:	2c 87       	std	Y+12, r18	; 0x0c
 37e:	2a d1       	rcall	.+596    	; 0x5d4 <strnlen_P>
 380:	2c 01       	movw	r4, r24
 382:	2c 85       	ldd	r18, Y+12	; 0x0c
 384:	20 68       	ori	r18, 0x80	; 128
 386:	22 2e       	mov	r2, r18
 388:	83 01       	movw	r16, r6
 38a:	23 fc       	sbrc	r2, 3
 38c:	19 c0       	rjmp	.+50     	; 0x3c0 <vfprintf+0x1c8>
 38e:	83 2d       	mov	r24, r3
 390:	90 e0       	ldi	r25, 0x00	; 0
 392:	48 16       	cp	r4, r24
 394:	59 06       	cpc	r5, r25
 396:	a0 f4       	brcc	.+40     	; 0x3c0 <vfprintf+0x1c8>
 398:	b7 01       	movw	r22, r14
 39a:	80 e2       	ldi	r24, 0x20	; 32
 39c:	90 e0       	ldi	r25, 0x00	; 0
 39e:	30 d1       	rcall	.+608    	; 0x600 <fputc>
 3a0:	3a 94       	dec	r3
 3a2:	f5 cf       	rjmp	.-22     	; 0x38e <vfprintf+0x196>
 3a4:	f5 01       	movw	r30, r10
 3a6:	27 fc       	sbrc	r2, 7
 3a8:	85 91       	lpm	r24, Z+
 3aa:	27 fe       	sbrs	r2, 7
 3ac:	81 91       	ld	r24, Z+
 3ae:	5f 01       	movw	r10, r30
 3b0:	b7 01       	movw	r22, r14
 3b2:	90 e0       	ldi	r25, 0x00	; 0
 3b4:	25 d1       	rcall	.+586    	; 0x600 <fputc>
 3b6:	31 10       	cpse	r3, r1
 3b8:	3a 94       	dec	r3
 3ba:	f1 e0       	ldi	r31, 0x01	; 1
 3bc:	4f 1a       	sub	r4, r31
 3be:	51 08       	sbc	r5, r1
 3c0:	41 14       	cp	r4, r1
 3c2:	51 04       	cpc	r5, r1
 3c4:	79 f7       	brne	.-34     	; 0x3a4 <vfprintf+0x1ac>
 3c6:	de c0       	rjmp	.+444    	; 0x584 <__FUSE_REGION_LENGTH__+0x184>
 3c8:	84 36       	cpi	r24, 0x64	; 100
 3ca:	11 f0       	breq	.+4      	; 0x3d0 <vfprintf+0x1d8>
 3cc:	89 36       	cpi	r24, 0x69	; 105
 3ce:	31 f5       	brne	.+76     	; 0x41c <__FUSE_REGION_LENGTH__+0x1c>
 3d0:	f8 01       	movw	r30, r16
 3d2:	27 ff       	sbrs	r18, 7
 3d4:	07 c0       	rjmp	.+14     	; 0x3e4 <vfprintf+0x1ec>
 3d6:	60 81       	ld	r22, Z
 3d8:	71 81       	ldd	r23, Z+1	; 0x01
 3da:	82 81       	ldd	r24, Z+2	; 0x02
 3dc:	93 81       	ldd	r25, Z+3	; 0x03
 3de:	0c 5f       	subi	r16, 0xFC	; 252
 3e0:	1f 4f       	sbci	r17, 0xFF	; 255
 3e2:	08 c0       	rjmp	.+16     	; 0x3f4 <vfprintf+0x1fc>
 3e4:	60 81       	ld	r22, Z
 3e6:	71 81       	ldd	r23, Z+1	; 0x01
 3e8:	07 2e       	mov	r0, r23
 3ea:	00 0c       	add	r0, r0
 3ec:	88 0b       	sbc	r24, r24
 3ee:	99 0b       	sbc	r25, r25
 3f0:	0e 5f       	subi	r16, 0xFE	; 254
 3f2:	1f 4f       	sbci	r17, 0xFF	; 255
 3f4:	2f 76       	andi	r18, 0x6F	; 111
 3f6:	72 2e       	mov	r7, r18
 3f8:	97 ff       	sbrs	r25, 7
 3fa:	09 c0       	rjmp	.+18     	; 0x40e <__FUSE_REGION_LENGTH__+0xe>
 3fc:	90 95       	com	r25
 3fe:	80 95       	com	r24
 400:	70 95       	com	r23
 402:	61 95       	neg	r22
 404:	7f 4f       	sbci	r23, 0xFF	; 255
 406:	8f 4f       	sbci	r24, 0xFF	; 255
 408:	9f 4f       	sbci	r25, 0xFF	; 255
 40a:	20 68       	ori	r18, 0x80	; 128
 40c:	72 2e       	mov	r7, r18
 40e:	2a e0       	ldi	r18, 0x0A	; 10
 410:	30 e0       	ldi	r19, 0x00	; 0
 412:	a4 01       	movw	r20, r8
 414:	2d d1       	rcall	.+602    	; 0x670 <__ultoa_invert>
 416:	a8 2e       	mov	r10, r24
 418:	a8 18       	sub	r10, r8
 41a:	43 c0       	rjmp	.+134    	; 0x4a2 <__FUSE_REGION_LENGTH__+0xa2>
 41c:	85 37       	cpi	r24, 0x75	; 117
 41e:	29 f4       	brne	.+10     	; 0x42a <__FUSE_REGION_LENGTH__+0x2a>
 420:	2f 7e       	andi	r18, 0xEF	; 239
 422:	b2 2e       	mov	r11, r18
 424:	2a e0       	ldi	r18, 0x0A	; 10
 426:	30 e0       	ldi	r19, 0x00	; 0
 428:	25 c0       	rjmp	.+74     	; 0x474 <__FUSE_REGION_LENGTH__+0x74>
 42a:	f2 2f       	mov	r31, r18
 42c:	f9 7f       	andi	r31, 0xF9	; 249
 42e:	bf 2e       	mov	r11, r31
 430:	8f 36       	cpi	r24, 0x6F	; 111
 432:	c1 f0       	breq	.+48     	; 0x464 <__FUSE_REGION_LENGTH__+0x64>
 434:	18 f4       	brcc	.+6      	; 0x43c <__FUSE_REGION_LENGTH__+0x3c>
 436:	88 35       	cpi	r24, 0x58	; 88
 438:	79 f0       	breq	.+30     	; 0x458 <__FUSE_REGION_LENGTH__+0x58>
 43a:	ad c0       	rjmp	.+346    	; 0x596 <__FUSE_REGION_LENGTH__+0x196>
 43c:	80 37       	cpi	r24, 0x70	; 112
 43e:	19 f0       	breq	.+6      	; 0x446 <__FUSE_REGION_LENGTH__+0x46>
 440:	88 37       	cpi	r24, 0x78	; 120
 442:	21 f0       	breq	.+8      	; 0x44c <__FUSE_REGION_LENGTH__+0x4c>
 444:	a8 c0       	rjmp	.+336    	; 0x596 <__FUSE_REGION_LENGTH__+0x196>
 446:	2f 2f       	mov	r18, r31
 448:	20 61       	ori	r18, 0x10	; 16
 44a:	b2 2e       	mov	r11, r18
 44c:	b4 fe       	sbrs	r11, 4
 44e:	0d c0       	rjmp	.+26     	; 0x46a <__FUSE_REGION_LENGTH__+0x6a>
 450:	8b 2d       	mov	r24, r11
 452:	84 60       	ori	r24, 0x04	; 4
 454:	b8 2e       	mov	r11, r24
 456:	09 c0       	rjmp	.+18     	; 0x46a <__FUSE_REGION_LENGTH__+0x6a>
 458:	24 ff       	sbrs	r18, 4
 45a:	0a c0       	rjmp	.+20     	; 0x470 <__FUSE_REGION_LENGTH__+0x70>
 45c:	9f 2f       	mov	r25, r31
 45e:	96 60       	ori	r25, 0x06	; 6
 460:	b9 2e       	mov	r11, r25
 462:	06 c0       	rjmp	.+12     	; 0x470 <__FUSE_REGION_LENGTH__+0x70>
 464:	28 e0       	ldi	r18, 0x08	; 8
 466:	30 e0       	ldi	r19, 0x00	; 0
 468:	05 c0       	rjmp	.+10     	; 0x474 <__FUSE_REGION_LENGTH__+0x74>
 46a:	20 e1       	ldi	r18, 0x10	; 16
 46c:	30 e0       	ldi	r19, 0x00	; 0
 46e:	02 c0       	rjmp	.+4      	; 0x474 <__FUSE_REGION_LENGTH__+0x74>
 470:	20 e1       	ldi	r18, 0x10	; 16
 472:	32 e0       	ldi	r19, 0x02	; 2
 474:	f8 01       	movw	r30, r16
 476:	b7 fe       	sbrs	r11, 7
 478:	07 c0       	rjmp	.+14     	; 0x488 <__FUSE_REGION_LENGTH__+0x88>
 47a:	60 81       	ld	r22, Z
 47c:	71 81       	ldd	r23, Z+1	; 0x01
 47e:	82 81       	ldd	r24, Z+2	; 0x02
 480:	93 81       	ldd	r25, Z+3	; 0x03
 482:	0c 5f       	subi	r16, 0xFC	; 252
 484:	1f 4f       	sbci	r17, 0xFF	; 255
 486:	06 c0       	rjmp	.+12     	; 0x494 <__FUSE_REGION_LENGTH__+0x94>
 488:	60 81       	ld	r22, Z
 48a:	71 81       	ldd	r23, Z+1	; 0x01
 48c:	80 e0       	ldi	r24, 0x00	; 0
 48e:	90 e0       	ldi	r25, 0x00	; 0
 490:	0e 5f       	subi	r16, 0xFE	; 254
 492:	1f 4f       	sbci	r17, 0xFF	; 255
 494:	a4 01       	movw	r20, r8
 496:	ec d0       	rcall	.+472    	; 0x670 <__ultoa_invert>
 498:	a8 2e       	mov	r10, r24
 49a:	a8 18       	sub	r10, r8
 49c:	fb 2d       	mov	r31, r11
 49e:	ff 77       	andi	r31, 0x7F	; 127
 4a0:	7f 2e       	mov	r7, r31
 4a2:	76 fe       	sbrs	r7, 6
 4a4:	0b c0       	rjmp	.+22     	; 0x4bc <__FUSE_REGION_LENGTH__+0xbc>
 4a6:	37 2d       	mov	r19, r7
 4a8:	3e 7f       	andi	r19, 0xFE	; 254
 4aa:	a5 14       	cp	r10, r5
 4ac:	50 f4       	brcc	.+20     	; 0x4c2 <__FUSE_REGION_LENGTH__+0xc2>
 4ae:	74 fe       	sbrs	r7, 4
 4b0:	0a c0       	rjmp	.+20     	; 0x4c6 <__FUSE_REGION_LENGTH__+0xc6>
 4b2:	72 fc       	sbrc	r7, 2
 4b4:	08 c0       	rjmp	.+16     	; 0x4c6 <__FUSE_REGION_LENGTH__+0xc6>
 4b6:	37 2d       	mov	r19, r7
 4b8:	3e 7e       	andi	r19, 0xEE	; 238
 4ba:	05 c0       	rjmp	.+10     	; 0x4c6 <__FUSE_REGION_LENGTH__+0xc6>
 4bc:	ba 2c       	mov	r11, r10
 4be:	37 2d       	mov	r19, r7
 4c0:	03 c0       	rjmp	.+6      	; 0x4c8 <__FUSE_REGION_LENGTH__+0xc8>
 4c2:	ba 2c       	mov	r11, r10
 4c4:	01 c0       	rjmp	.+2      	; 0x4c8 <__FUSE_REGION_LENGTH__+0xc8>
 4c6:	b5 2c       	mov	r11, r5
 4c8:	34 ff       	sbrs	r19, 4
 4ca:	0d c0       	rjmp	.+26     	; 0x4e6 <__FUSE_REGION_LENGTH__+0xe6>
 4cc:	fe 01       	movw	r30, r28
 4ce:	ea 0d       	add	r30, r10
 4d0:	f1 1d       	adc	r31, r1
 4d2:	80 81       	ld	r24, Z
 4d4:	80 33       	cpi	r24, 0x30	; 48
 4d6:	11 f4       	brne	.+4      	; 0x4dc <__FUSE_REGION_LENGTH__+0xdc>
 4d8:	39 7e       	andi	r19, 0xE9	; 233
 4da:	09 c0       	rjmp	.+18     	; 0x4ee <__FUSE_REGION_LENGTH__+0xee>
 4dc:	32 ff       	sbrs	r19, 2
 4de:	06 c0       	rjmp	.+12     	; 0x4ec <__FUSE_REGION_LENGTH__+0xec>
 4e0:	b3 94       	inc	r11
 4e2:	b3 94       	inc	r11
 4e4:	04 c0       	rjmp	.+8      	; 0x4ee <__FUSE_REGION_LENGTH__+0xee>
 4e6:	83 2f       	mov	r24, r19
 4e8:	86 78       	andi	r24, 0x86	; 134
 4ea:	09 f0       	breq	.+2      	; 0x4ee <__FUSE_REGION_LENGTH__+0xee>
 4ec:	b3 94       	inc	r11
 4ee:	33 fd       	sbrc	r19, 3
 4f0:	12 c0       	rjmp	.+36     	; 0x516 <__FUSE_REGION_LENGTH__+0x116>
 4f2:	30 ff       	sbrs	r19, 0
 4f4:	06 c0       	rjmp	.+12     	; 0x502 <__FUSE_REGION_LENGTH__+0x102>
 4f6:	5a 2c       	mov	r5, r10
 4f8:	b3 14       	cp	r11, r3
 4fa:	18 f4       	brcc	.+6      	; 0x502 <__FUSE_REGION_LENGTH__+0x102>
 4fc:	53 0c       	add	r5, r3
 4fe:	5b 18       	sub	r5, r11
 500:	b3 2c       	mov	r11, r3
 502:	b3 14       	cp	r11, r3
 504:	60 f4       	brcc	.+24     	; 0x51e <__FUSE_REGION_LENGTH__+0x11e>
 506:	b7 01       	movw	r22, r14
 508:	80 e2       	ldi	r24, 0x20	; 32
 50a:	90 e0       	ldi	r25, 0x00	; 0
 50c:	3c 87       	std	Y+12, r19	; 0x0c
 50e:	78 d0       	rcall	.+240    	; 0x600 <fputc>
 510:	b3 94       	inc	r11
 512:	3c 85       	ldd	r19, Y+12	; 0x0c
 514:	f6 cf       	rjmp	.-20     	; 0x502 <__FUSE_REGION_LENGTH__+0x102>
 516:	b3 14       	cp	r11, r3
 518:	10 f4       	brcc	.+4      	; 0x51e <__FUSE_REGION_LENGTH__+0x11e>
 51a:	3b 18       	sub	r3, r11
 51c:	01 c0       	rjmp	.+2      	; 0x520 <__FUSE_REGION_LENGTH__+0x120>
 51e:	31 2c       	mov	r3, r1
 520:	34 ff       	sbrs	r19, 4
 522:	11 c0       	rjmp	.+34     	; 0x546 <__FUSE_REGION_LENGTH__+0x146>
 524:	b7 01       	movw	r22, r14
 526:	80 e3       	ldi	r24, 0x30	; 48
 528:	90 e0       	ldi	r25, 0x00	; 0
 52a:	3c 87       	std	Y+12, r19	; 0x0c
 52c:	69 d0       	rcall	.+210    	; 0x600 <fputc>
 52e:	3c 85       	ldd	r19, Y+12	; 0x0c
 530:	32 ff       	sbrs	r19, 2
 532:	16 c0       	rjmp	.+44     	; 0x560 <__FUSE_REGION_LENGTH__+0x160>
 534:	31 fd       	sbrc	r19, 1
 536:	03 c0       	rjmp	.+6      	; 0x53e <__FUSE_REGION_LENGTH__+0x13e>
 538:	88 e7       	ldi	r24, 0x78	; 120
 53a:	90 e0       	ldi	r25, 0x00	; 0
 53c:	02 c0       	rjmp	.+4      	; 0x542 <__FUSE_REGION_LENGTH__+0x142>
 53e:	88 e5       	ldi	r24, 0x58	; 88
 540:	90 e0       	ldi	r25, 0x00	; 0
 542:	b7 01       	movw	r22, r14
 544:	0c c0       	rjmp	.+24     	; 0x55e <__FUSE_REGION_LENGTH__+0x15e>
 546:	83 2f       	mov	r24, r19
 548:	86 78       	andi	r24, 0x86	; 134
 54a:	51 f0       	breq	.+20     	; 0x560 <__FUSE_REGION_LENGTH__+0x160>
 54c:	31 ff       	sbrs	r19, 1
 54e:	02 c0       	rjmp	.+4      	; 0x554 <__FUSE_REGION_LENGTH__+0x154>
 550:	8b e2       	ldi	r24, 0x2B	; 43
 552:	01 c0       	rjmp	.+2      	; 0x556 <__FUSE_REGION_LENGTH__+0x156>
 554:	80 e2       	ldi	r24, 0x20	; 32
 556:	37 fd       	sbrc	r19, 7
 558:	8d e2       	ldi	r24, 0x2D	; 45
 55a:	b7 01       	movw	r22, r14
 55c:	90 e0       	ldi	r25, 0x00	; 0
 55e:	50 d0       	rcall	.+160    	; 0x600 <fputc>
 560:	a5 14       	cp	r10, r5
 562:	30 f4       	brcc	.+12     	; 0x570 <__FUSE_REGION_LENGTH__+0x170>
 564:	b7 01       	movw	r22, r14
 566:	80 e3       	ldi	r24, 0x30	; 48
 568:	90 e0       	ldi	r25, 0x00	; 0
 56a:	4a d0       	rcall	.+148    	; 0x600 <fputc>
 56c:	5a 94       	dec	r5
 56e:	f8 cf       	rjmp	.-16     	; 0x560 <__FUSE_REGION_LENGTH__+0x160>
 570:	aa 94       	dec	r10
 572:	f4 01       	movw	r30, r8
 574:	ea 0d       	add	r30, r10
 576:	f1 1d       	adc	r31, r1
 578:	80 81       	ld	r24, Z
 57a:	b7 01       	movw	r22, r14
 57c:	90 e0       	ldi	r25, 0x00	; 0
 57e:	40 d0       	rcall	.+128    	; 0x600 <fputc>
 580:	a1 10       	cpse	r10, r1
 582:	f6 cf       	rjmp	.-20     	; 0x570 <__FUSE_REGION_LENGTH__+0x170>
 584:	33 20       	and	r3, r3
 586:	09 f4       	brne	.+2      	; 0x58a <__FUSE_REGION_LENGTH__+0x18a>
 588:	5d ce       	rjmp	.-838    	; 0x244 <vfprintf+0x4c>
 58a:	b7 01       	movw	r22, r14
 58c:	80 e2       	ldi	r24, 0x20	; 32
 58e:	90 e0       	ldi	r25, 0x00	; 0
 590:	37 d0       	rcall	.+110    	; 0x600 <fputc>
 592:	3a 94       	dec	r3
 594:	f7 cf       	rjmp	.-18     	; 0x584 <__FUSE_REGION_LENGTH__+0x184>
 596:	f7 01       	movw	r30, r14
 598:	86 81       	ldd	r24, Z+6	; 0x06
 59a:	97 81       	ldd	r25, Z+7	; 0x07
 59c:	02 c0       	rjmp	.+4      	; 0x5a2 <__FUSE_REGION_LENGTH__+0x1a2>
 59e:	8f ef       	ldi	r24, 0xFF	; 255
 5a0:	9f ef       	ldi	r25, 0xFF	; 255
 5a2:	2c 96       	adiw	r28, 0x0c	; 12
 5a4:	0f b6       	in	r0, 0x3f	; 63
 5a6:	f8 94       	cli
 5a8:	de bf       	out	0x3e, r29	; 62
 5aa:	0f be       	out	0x3f, r0	; 63
 5ac:	cd bf       	out	0x3d, r28	; 61
 5ae:	df 91       	pop	r29
 5b0:	cf 91       	pop	r28
 5b2:	1f 91       	pop	r17
 5b4:	0f 91       	pop	r16
 5b6:	ff 90       	pop	r15
 5b8:	ef 90       	pop	r14
 5ba:	df 90       	pop	r13
 5bc:	cf 90       	pop	r12
 5be:	bf 90       	pop	r11
 5c0:	af 90       	pop	r10
 5c2:	9f 90       	pop	r9
 5c4:	8f 90       	pop	r8
 5c6:	7f 90       	pop	r7
 5c8:	6f 90       	pop	r6
 5ca:	5f 90       	pop	r5
 5cc:	4f 90       	pop	r4
 5ce:	3f 90       	pop	r3
 5d0:	2f 90       	pop	r2
 5d2:	08 95       	ret

000005d4 <strnlen_P>:
 5d4:	fc 01       	movw	r30, r24
 5d6:	05 90       	lpm	r0, Z+
 5d8:	61 50       	subi	r22, 0x01	; 1
 5da:	70 40       	sbci	r23, 0x00	; 0
 5dc:	01 10       	cpse	r0, r1
 5de:	d8 f7       	brcc	.-10     	; 0x5d6 <strnlen_P+0x2>
 5e0:	80 95       	com	r24
 5e2:	90 95       	com	r25
 5e4:	8e 0f       	add	r24, r30
 5e6:	9f 1f       	adc	r25, r31
 5e8:	08 95       	ret

000005ea <strnlen>:
 5ea:	fc 01       	movw	r30, r24
 5ec:	61 50       	subi	r22, 0x01	; 1
 5ee:	70 40       	sbci	r23, 0x00	; 0
 5f0:	01 90       	ld	r0, Z+
 5f2:	01 10       	cpse	r0, r1
 5f4:	d8 f7       	brcc	.-10     	; 0x5ec <strnlen+0x2>
 5f6:	80 95       	com	r24
 5f8:	90 95       	com	r25
 5fa:	8e 0f       	add	r24, r30
 5fc:	9f 1f       	adc	r25, r31
 5fe:	08 95       	ret

00000600 <fputc>:
 600:	0f 93       	push	r16
 602:	1f 93       	push	r17
 604:	cf 93       	push	r28
 606:	df 93       	push	r29
 608:	fb 01       	movw	r30, r22
 60a:	23 81       	ldd	r18, Z+3	; 0x03
 60c:	21 fd       	sbrc	r18, 1
 60e:	03 c0       	rjmp	.+6      	; 0x616 <fputc+0x16>
 610:	8f ef       	ldi	r24, 0xFF	; 255
 612:	9f ef       	ldi	r25, 0xFF	; 255
 614:	28 c0       	rjmp	.+80     	; 0x666 <fputc+0x66>
 616:	22 ff       	sbrs	r18, 2
 618:	16 c0       	rjmp	.+44     	; 0x646 <fputc+0x46>
 61a:	46 81       	ldd	r20, Z+6	; 0x06
 61c:	57 81       	ldd	r21, Z+7	; 0x07
 61e:	24 81       	ldd	r18, Z+4	; 0x04
 620:	35 81       	ldd	r19, Z+5	; 0x05
 622:	42 17       	cp	r20, r18
 624:	53 07       	cpc	r21, r19
 626:	44 f4       	brge	.+16     	; 0x638 <fputc+0x38>
 628:	a0 81       	ld	r26, Z
 62a:	b1 81       	ldd	r27, Z+1	; 0x01
 62c:	9d 01       	movw	r18, r26
 62e:	2f 5f       	subi	r18, 0xFF	; 255
 630:	3f 4f       	sbci	r19, 0xFF	; 255
 632:	31 83       	std	Z+1, r19	; 0x01
 634:	20 83       	st	Z, r18
 636:	8c 93       	st	X, r24
 638:	26 81       	ldd	r18, Z+6	; 0x06
 63a:	37 81       	ldd	r19, Z+7	; 0x07
 63c:	2f 5f       	subi	r18, 0xFF	; 255
 63e:	3f 4f       	sbci	r19, 0xFF	; 255
 640:	37 83       	std	Z+7, r19	; 0x07
 642:	26 83       	std	Z+6, r18	; 0x06
 644:	10 c0       	rjmp	.+32     	; 0x666 <fputc+0x66>
 646:	eb 01       	movw	r28, r22
 648:	09 2f       	mov	r16, r25
 64a:	18 2f       	mov	r17, r24
 64c:	00 84       	ldd	r0, Z+8	; 0x08
 64e:	f1 85       	ldd	r31, Z+9	; 0x09
 650:	e0 2d       	mov	r30, r0
 652:	09 95       	icall
 654:	89 2b       	or	r24, r25
 656:	e1 f6       	brne	.-72     	; 0x610 <fputc+0x10>
 658:	8e 81       	ldd	r24, Y+6	; 0x06
 65a:	9f 81       	ldd	r25, Y+7	; 0x07
 65c:	01 96       	adiw	r24, 0x01	; 1
 65e:	9f 83       	std	Y+7, r25	; 0x07
 660:	8e 83       	std	Y+6, r24	; 0x06
 662:	81 2f       	mov	r24, r17
 664:	90 2f       	mov	r25, r16
 666:	df 91       	pop	r29
 668:	cf 91       	pop	r28
 66a:	1f 91       	pop	r17
 66c:	0f 91       	pop	r16
 66e:	08 95       	ret

00000670 <__ultoa_invert>:
 670:	fa 01       	movw	r30, r20
 672:	aa 27       	eor	r26, r26
 674:	28 30       	cpi	r18, 0x08	; 8
 676:	51 f1       	breq	.+84     	; 0x6cc <__ultoa_invert+0x5c>
 678:	20 31       	cpi	r18, 0x10	; 16
 67a:	81 f1       	breq	.+96     	; 0x6dc <__ultoa_invert+0x6c>
 67c:	e8 94       	clt
 67e:	6f 93       	push	r22
 680:	6e 7f       	andi	r22, 0xFE	; 254
 682:	6e 5f       	subi	r22, 0xFE	; 254
 684:	7f 4f       	sbci	r23, 0xFF	; 255
 686:	8f 4f       	sbci	r24, 0xFF	; 255
 688:	9f 4f       	sbci	r25, 0xFF	; 255
 68a:	af 4f       	sbci	r26, 0xFF	; 255
 68c:	b1 e0       	ldi	r27, 0x01	; 1
 68e:	3e d0       	rcall	.+124    	; 0x70c <__ultoa_invert+0x9c>
 690:	b4 e0       	ldi	r27, 0x04	; 4
 692:	3c d0       	rcall	.+120    	; 0x70c <__ultoa_invert+0x9c>
 694:	67 0f       	add	r22, r23
 696:	78 1f       	adc	r23, r24
 698:	89 1f       	adc	r24, r25
 69a:	9a 1f       	adc	r25, r26
 69c:	a1 1d       	adc	r26, r1
 69e:	68 0f       	add	r22, r24
 6a0:	79 1f       	adc	r23, r25
 6a2:	8a 1f       	adc	r24, r26
 6a4:	91 1d       	adc	r25, r1
 6a6:	a1 1d       	adc	r26, r1
 6a8:	6a 0f       	add	r22, r26
 6aa:	71 1d       	adc	r23, r1
 6ac:	81 1d       	adc	r24, r1
 6ae:	91 1d       	adc	r25, r1
 6b0:	a1 1d       	adc	r26, r1
 6b2:	20 d0       	rcall	.+64     	; 0x6f4 <__ultoa_invert+0x84>
 6b4:	09 f4       	brne	.+2      	; 0x6b8 <__ultoa_invert+0x48>
 6b6:	68 94       	set
 6b8:	3f 91       	pop	r19
 6ba:	2a e0       	ldi	r18, 0x0A	; 10
 6bc:	26 9f       	mul	r18, r22
 6be:	11 24       	eor	r1, r1
 6c0:	30 19       	sub	r19, r0
 6c2:	30 5d       	subi	r19, 0xD0	; 208
 6c4:	31 93       	st	Z+, r19
 6c6:	de f6       	brtc	.-74     	; 0x67e <__ultoa_invert+0xe>
 6c8:	cf 01       	movw	r24, r30
 6ca:	08 95       	ret
 6cc:	46 2f       	mov	r20, r22
 6ce:	47 70       	andi	r20, 0x07	; 7
 6d0:	40 5d       	subi	r20, 0xD0	; 208
 6d2:	41 93       	st	Z+, r20
 6d4:	b3 e0       	ldi	r27, 0x03	; 3
 6d6:	0f d0       	rcall	.+30     	; 0x6f6 <__ultoa_invert+0x86>
 6d8:	c9 f7       	brne	.-14     	; 0x6cc <__ultoa_invert+0x5c>
 6da:	f6 cf       	rjmp	.-20     	; 0x6c8 <__ultoa_invert+0x58>
 6dc:	46 2f       	mov	r20, r22
 6de:	4f 70       	andi	r20, 0x0F	; 15
 6e0:	40 5d       	subi	r20, 0xD0	; 208
 6e2:	4a 33       	cpi	r20, 0x3A	; 58
 6e4:	18 f0       	brcs	.+6      	; 0x6ec <__ultoa_invert+0x7c>
 6e6:	49 5d       	subi	r20, 0xD9	; 217
 6e8:	31 fd       	sbrc	r19, 1
 6ea:	40 52       	subi	r20, 0x20	; 32
 6ec:	41 93       	st	Z+, r20
 6ee:	02 d0       	rcall	.+4      	; 0x6f4 <__ultoa_invert+0x84>
 6f0:	a9 f7       	brne	.-22     	; 0x6dc <__ultoa_invert+0x6c>
 6f2:	ea cf       	rjmp	.-44     	; 0x6c8 <__ultoa_invert+0x58>
 6f4:	b4 e0       	ldi	r27, 0x04	; 4
 6f6:	a6 95       	lsr	r26
 6f8:	97 95       	ror	r25
 6fa:	87 95       	ror	r24
 6fc:	77 95       	ror	r23
 6fe:	67 95       	ror	r22
 700:	ba 95       	dec	r27
 702:	c9 f7       	brne	.-14     	; 0x6f6 <__ultoa_invert+0x86>
 704:	00 97       	sbiw	r24, 0x00	; 0
 706:	61 05       	cpc	r22, r1
 708:	71 05       	cpc	r23, r1
 70a:	08 95       	ret
 70c:	9b 01       	movw	r18, r22
 70e:	ac 01       	movw	r20, r24
 710:	0a 2e       	mov	r0, r26
 712:	06 94       	lsr	r0
 714:	57 95       	ror	r21
 716:	47 95       	ror	r20
 718:	37 95       	ror	r19
 71a:	27 95       	ror	r18
 71c:	ba 95       	dec	r27
 71e:	c9 f7       	brne	.-14     	; 0x712 <__ultoa_invert+0xa2>
 720:	62 0f       	add	r22, r18
 722:	73 1f       	adc	r23, r19
 724:	84 1f       	adc	r24, r20
 726:	95 1f       	adc	r25, r21
 728:	a0 1d       	adc	r26, r0
 72a:	08 95       	ret

0000072c <_exit>:
 72c:	f8 94       	cli

0000072e <__stop_program>:
 72e:	ff cf       	rjmp	.-2      	; 0x72e <__stop_program>
