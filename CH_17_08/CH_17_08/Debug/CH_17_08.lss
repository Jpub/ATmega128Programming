
CH_17_08.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000c6  00800100  000008bc  00000950  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000008bc  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  008001c6  008001c6  00000a16  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000a16  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000a74  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000b8  00000000  00000000  00000ab4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000007ab  00000000  00000000  00000b6c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000421  00000000  00000000  00001317  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000582  00000000  00000000  00001738  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000015c  00000000  00000000  00001cbc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000002c0  00000000  00000000  00001e18  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000298  00000000  00000000  000020d8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000088  00000000  00000000  00002370  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	ec eb       	ldi	r30, 0xBC	; 188
  a0:	f8 e0       	ldi	r31, 0x08	; 8
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a6 3c       	cpi	r26, 0xC6	; 198
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	a6 ec       	ldi	r26, 0xC6	; 198
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	ac 3c       	cpi	r26, 0xCC	; 204
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	54 d0       	rcall	.+168    	; 0x16c <main>
  c4:	f9 c3       	rjmp	.+2034   	; 0x8b8 <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <I2C_init>:
﻿#include "I2C_RTC.h"

void I2C_init(void)
{
	DDRD |= (1 << I2C_SCL);	// SCL 핀을 출력으로 설정
  c8:	88 9a       	sbi	0x11, 0	; 17
	DDRD |= (1 << I2C_SDA);	// SDA 핀을 출력으로 설정
  ca:	89 9a       	sbi	0x11, 1	; 17

	TWBR = 32;			// I2C 클록 주파수 설정 200KHz
  cc:	80 e2       	ldi	r24, 0x20	; 32
  ce:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <__TEXT_REGION_LENGTH__+0x7e0070>
  d2:	08 95       	ret

000000d4 <I2C_start>:
}

void I2C_start(void)
{
	TWCR = _BV(TWINT) | _BV(TWSTA) | _BV(TWEN);
  d4:	84 ea       	ldi	r24, 0xA4	; 164
  d6:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>

	while( !(TWCR & (1 << TWINT)) );	// 시작 완료 대기
  da:	e4 e7       	ldi	r30, 0x74	; 116
  dc:	f0 e0       	ldi	r31, 0x00	; 0
  de:	80 81       	ld	r24, Z
  e0:	88 23       	and	r24, r24
  e2:	ec f7       	brge	.-6      	; 0xde <I2C_start+0xa>
}
  e4:	08 95       	ret

000000e6 <I2C_transmit>:

void I2C_transmit(uint8_t data)
{
	TWDR = data;
  e6:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
	TWCR = _BV(TWINT) | _BV(TWEN) | _BV(TWEA);
  ea:	84 ec       	ldi	r24, 0xC4	; 196
  ec:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>

	while( !(TWCR & (1 << TWINT)) );	// 전송 완료 대기
  f0:	e4 e7       	ldi	r30, 0x74	; 116
  f2:	f0 e0       	ldi	r31, 0x00	; 0
  f4:	80 81       	ld	r24, Z
  f6:	88 23       	and	r24, r24
  f8:	ec f7       	brge	.-6      	; 0xf4 <I2C_transmit+0xe>
}
  fa:	08 95       	ret

000000fc <I2C_receive_ACK>:

uint8_t I2C_receive_ACK(void)
{
	TWCR = _BV(TWINT) | _BV(TWEN) | _BV(TWEA);
  fc:	84 ec       	ldi	r24, 0xC4	; 196
  fe:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
	
	while( !(TWCR & (1 << TWINT)) );	// 수신 완료 대기
 102:	e4 e7       	ldi	r30, 0x74	; 116
 104:	f0 e0       	ldi	r31, 0x00	; 0
 106:	80 81       	ld	r24, Z
 108:	88 23       	and	r24, r24
 10a:	ec f7       	brge	.-6      	; 0x106 <I2C_receive_ACK+0xa>
	
	return TWDR;
 10c:	80 91 73 00 	lds	r24, 0x0073	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
}
 110:	08 95       	ret

00000112 <I2C_receive_NACK>:

uint8_t I2C_receive_NACK(void)
{
	TWCR = _BV(TWINT) | _BV(TWEN);
 112:	84 e8       	ldi	r24, 0x84	; 132
 114:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
	
	while( !(TWCR & (1 << TWINT)) );	// 수신 완료 대기
 118:	e4 e7       	ldi	r30, 0x74	; 116
 11a:	f0 e0       	ldi	r31, 0x00	; 0
 11c:	80 81       	ld	r24, Z
 11e:	88 23       	and	r24, r24
 120:	ec f7       	brge	.-6      	; 0x11c <I2C_receive_NACK+0xa>
	
	return TWDR;
 122:	80 91 73 00 	lds	r24, 0x0073	; 0x800073 <__TEXT_REGION_LENGTH__+0x7e0073>
}
 126:	08 95       	ret

00000128 <I2C_stop>:

void I2C_stop(void)
{
	TWCR = _BV(TWINT) | _BV(TWSTO) | _BV(TWEN);
 128:	84 e9       	ldi	r24, 0x94	; 148
 12a:	80 93 74 00 	sts	0x0074, r24	; 0x800074 <__TEXT_REGION_LENGTH__+0x7e0074>
 12e:	08 95       	ret

00000130 <bcd_to_decimal>:
FILE INPUT \
= FDEV_SETUP_STREAM(NULL, UART1_receive, _FDEV_SETUP_READ);

uint8_t bcd_to_decimal(uint8_t bcd)	// BCD 형식 -> 이진수 형식
{
	return (bcd >> 4) * 10 + (bcd & 0x0F);
 130:	98 2f       	mov	r25, r24
 132:	92 95       	swap	r25
 134:	9f 70       	andi	r25, 0x0F	; 15
 136:	99 0f       	add	r25, r25
 138:	29 2f       	mov	r18, r25
 13a:	22 0f       	add	r18, r18
 13c:	22 0f       	add	r18, r18
 13e:	92 0f       	add	r25, r18
 140:	8f 70       	andi	r24, 0x0F	; 15
}
 142:	89 0f       	add	r24, r25
 144:	08 95       	ret

00000146 <decimal_to_bcd>:

uint8_t decimal_to_bcd(uint8_t decimal)	// 이진수 형식 -> BCD 형식
{
	return ( ((decimal / 10) << 4) | (decimal % 10) );
 146:	9d ec       	ldi	r25, 0xCD	; 205
 148:	89 9f       	mul	r24, r25
 14a:	91 2d       	mov	r25, r1
 14c:	11 24       	eor	r1, r1
 14e:	96 95       	lsr	r25
 150:	96 95       	lsr	r25
 152:	96 95       	lsr	r25
 154:	20 e1       	ldi	r18, 0x10	; 16
 156:	92 9f       	mul	r25, r18
 158:	a0 01       	movw	r20, r0
 15a:	11 24       	eor	r1, r1
 15c:	99 0f       	add	r25, r25
 15e:	29 2f       	mov	r18, r25
 160:	22 0f       	add	r18, r18
 162:	22 0f       	add	r18, r18
 164:	92 0f       	add	r25, r18
 166:	89 1b       	sub	r24, r25
}
 168:	84 2b       	or	r24, r20
 16a:	08 95       	ret

0000016c <main>:

int main(void)
{
 16c:	cf 93       	push	r28
 16e:	df 93       	push	r29
 170:	cd b7       	in	r28, 0x3d	; 61
 172:	de b7       	in	r29, 0x3e	; 62
 174:	27 97       	sbiw	r28, 0x07	; 7
 176:	0f b6       	in	r0, 0x3f	; 63
 178:	f8 94       	cli
 17a:	de bf       	out	0x3e, r29	; 62
 17c:	0f be       	out	0x3f, r0	; 63
 17e:	cd bf       	out	0x3d, r28	; 61
	uint8_t i;
	
	I2C_init();					// I2C 초기화
 180:	a3 df       	rcall	.-186    	; 0xc8 <I2C_init>
	UART1_init();				// UART 초기화
 182:	95 d0       	rcall	.+298    	; 0x2ae <UART1_init>
	
	stdout = &OUTPUT;
 184:	e6 ec       	ldi	r30, 0xC6	; 198
 186:	f1 e0       	ldi	r31, 0x01	; 1
 188:	8e e0       	ldi	r24, 0x0E	; 14
 18a:	91 e0       	ldi	r25, 0x01	; 1
 18c:	93 83       	std	Z+3, r25	; 0x03
 18e:	82 83       	std	Z+2, r24	; 0x02
	stdin = &INPUT;
 190:	80 e0       	ldi	r24, 0x00	; 0
 192:	91 e0       	ldi	r25, 0x01	; 1
 194:	91 83       	std	Z+1, r25	; 0x01
 196:	80 83       	st	Z, r24
	
	uint8_t address = 0x68;		// RTC 모듈의 I2C 주소
	
	// 초, 분, 시, 요일, 일, 월, 년
	// 2016년 1월 1일 월요일 12시 00분 00초
	uint8_t data[] = {00, 00, 12, 2, 1, 1, 16};
 198:	87 e0       	ldi	r24, 0x07	; 7
 19a:	ec e1       	ldi	r30, 0x1C	; 28
 19c:	f1 e0       	ldi	r31, 0x01	; 1
 19e:	de 01       	movw	r26, r28
 1a0:	11 96       	adiw	r26, 0x01	; 1
 1a2:	01 90       	ld	r0, Z+
 1a4:	0d 92       	st	X+, r0
 1a6:	8a 95       	dec	r24
 1a8:	e1 f7       	brne	.-8      	; 0x1a2 <main+0x36>
	
	// RTC 모듈에 시간 설정
	I2C_start();				// I2C 시작
 1aa:	94 df       	rcall	.-216    	; 0xd4 <I2C_start>
	I2C_transmit(address << 1);		// I2C 주소 전송. 쓰기 모드
 1ac:	80 ed       	ldi	r24, 0xD0	; 208
 1ae:	9b df       	rcall	.-202    	; 0xe6 <I2C_transmit>
	// RTC에 데이터를 기록할 메모리 시작 주소 전송
	I2C_transmit(0);
 1b0:	80 e0       	ldi	r24, 0x00	; 0
 1b2:	99 df       	rcall	.-206    	; 0xe6 <I2C_transmit>
	
	printf("* Setting RTC module...\r\n");
 1b4:	83 e2       	ldi	r24, 0x23	; 35
 1b6:	91 e0       	ldi	r25, 0x01	; 1
 1b8:	b5 d0       	rcall	.+362    	; 0x324 <puts>
 1ba:	ce 01       	movw	r24, r28
 1bc:	01 96       	adiw	r24, 0x01	; 1
 1be:	6c 01       	movw	r12, r24
 1c0:	00 e0       	ldi	r16, 0x00	; 0
 1c2:	10 e0       	ldi	r17, 0x00	; 0
	for(i = 0; i < 7; i++){
		printf(" %dth byte written...\r\n", i);
 1c4:	0f 2e       	mov	r0, r31
 1c6:	fc e3       	ldi	r31, 0x3C	; 60
 1c8:	ef 2e       	mov	r14, r31
 1ca:	f1 e0       	ldi	r31, 0x01	; 1
 1cc:	ff 2e       	mov	r15, r31
 1ce:	f0 2d       	mov	r31, r0
 1d0:	1f 93       	push	r17
 1d2:	0f 93       	push	r16
 1d4:	ff 92       	push	r15
 1d6:	ef 92       	push	r14
 1d8:	92 d0       	rcall	.+292    	; 0x2fe <printf>
		
		I2C_transmit(decimal_to_bcd(data[i]));	// 시간 설정
 1da:	f6 01       	movw	r30, r12
 1dc:	81 91       	ld	r24, Z+
 1de:	6f 01       	movw	r12, r30
 1e0:	b2 df       	rcall	.-156    	; 0x146 <decimal_to_bcd>
 1e2:	81 df       	rcall	.-254    	; 0xe6 <I2C_transmit>
 1e4:	0f 5f       	subi	r16, 0xFF	; 255
 1e6:	1f 4f       	sbci	r17, 0xFF	; 255
	I2C_transmit(address << 1);		// I2C 주소 전송. 쓰기 모드
	// RTC에 데이터를 기록할 메모리 시작 주소 전송
	I2C_transmit(0);
	
	printf("* Setting RTC module...\r\n");
	for(i = 0; i < 7; i++){
 1e8:	0f 90       	pop	r0
 1ea:	0f 90       	pop	r0
 1ec:	0f 90       	pop	r0
 1ee:	0f 90       	pop	r0
 1f0:	07 30       	cpi	r16, 0x07	; 7
 1f2:	11 05       	cpc	r17, r1
 1f4:	69 f7       	brne	.-38     	; 0x1d0 <main+0x64>
		printf(" %dth byte written...\r\n", i);
		
		I2C_transmit(decimal_to_bcd(data[i]));	// 시간 설정
	}

	I2C_stop();					// I2C 정지
 1f6:	98 df       	rcall	.-208    	; 0x128 <I2C_stop>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1f8:	ff ef       	ldi	r31, 0xFF	; 255
 1fa:	27 ea       	ldi	r18, 0xA7	; 167
 1fc:	81 e6       	ldi	r24, 0x61	; 97
 1fe:	f1 50       	subi	r31, 0x01	; 1
 200:	20 40       	sbci	r18, 0x00	; 0
 202:	80 40       	sbci	r24, 0x00	; 0
 204:	e1 f7       	brne	.-8      	; 0x1fe <main+0x92>
 206:	00 c0       	rjmp	.+0      	; 0x208 <main+0x9c>
 208:	00 00       	nop
	
	_delay_ms(2000);			// 2초 대기
	
	I2C_start();				// I2C 시작
 20a:	64 df       	rcall	.-312    	; 0xd4 <I2C_start>
	I2C_transmit(address << 1);		// I2C 주소 전송. 쓰기 모드
 20c:	80 ed       	ldi	r24, 0xD0	; 208
 20e:	6b df       	rcall	.-298    	; 0xe6 <I2C_transmit>
	// RTC에서 데이터를 읽어올 메모리 시작 주소 전송
	I2C_transmit(0);
 210:	80 e0       	ldi	r24, 0x00	; 0
 212:	69 df       	rcall	.-302    	; 0xe6 <I2C_transmit>
	I2C_stop();					// I2C 정지
 214:	89 df       	rcall	.-238    	; 0x128 <I2C_stop>
	
	I2C_start();				// I2C 읽기 모드로 다시 시작
 216:	5e df       	rcall	.-324    	; 0xd4 <I2C_start>
	I2C_transmit( (address << 1) + 1 );	// I2C 주소 전송. 읽기 모드
 218:	81 ed       	ldi	r24, 0xD1	; 209
 21a:	65 df       	rcall	.-310    	; 0xe6 <I2C_transmit>
	
	printf("* Time/Date Retrieval...\r\n");
 21c:	84 e5       	ldi	r24, 0x54	; 84
 21e:	91 e0       	ldi	r25, 0x01	; 1
 220:	81 d0       	rcall	.+258    	; 0x324 <puts>
	
	printf(" %d second\r\n", bcd_to_decimal(I2C_receive_ACK()));
 222:	6c df       	rcall	.-296    	; 0xfc <I2C_receive_ACK>
 224:	85 df       	rcall	.-246    	; 0x130 <bcd_to_decimal>
 226:	1f 92       	push	r1
 228:	8f 93       	push	r24
 22a:	8e e6       	ldi	r24, 0x6E	; 110
 22c:	91 e0       	ldi	r25, 0x01	; 1
 22e:	9f 93       	push	r25
 230:	8f 93       	push	r24
 232:	65 d0       	rcall	.+202    	; 0x2fe <printf>
	printf(" %d minute\r\n", bcd_to_decimal(I2C_receive_ACK()));
 234:	63 df       	rcall	.-314    	; 0xfc <I2C_receive_ACK>
 236:	7c df       	rcall	.-264    	; 0x130 <bcd_to_decimal>
 238:	1f 92       	push	r1
 23a:	8f 93       	push	r24
 23c:	8b e7       	ldi	r24, 0x7B	; 123
 23e:	91 e0       	ldi	r25, 0x01	; 1
 240:	9f 93       	push	r25
 242:	8f 93       	push	r24
 244:	5c d0       	rcall	.+184    	; 0x2fe <printf>
	printf(" %d hour\r\n", bcd_to_decimal(I2C_receive_ACK()));
 246:	5a df       	rcall	.-332    	; 0xfc <I2C_receive_ACK>
 248:	73 df       	rcall	.-282    	; 0x130 <bcd_to_decimal>
 24a:	1f 92       	push	r1
 24c:	8f 93       	push	r24
 24e:	88 e8       	ldi	r24, 0x88	; 136
 250:	91 e0       	ldi	r25, 0x01	; 1
 252:	9f 93       	push	r25
 254:	8f 93       	push	r24
 256:	53 d0       	rcall	.+166    	; 0x2fe <printf>
	printf(" %d day of week\r\n", bcd_to_decimal(I2C_receive_ACK()));
 258:	51 df       	rcall	.-350    	; 0xfc <I2C_receive_ACK>
 25a:	6a df       	rcall	.-300    	; 0x130 <bcd_to_decimal>
 25c:	1f 92       	push	r1
 25e:	8f 93       	push	r24
 260:	83 e9       	ldi	r24, 0x93	; 147
 262:	91 e0       	ldi	r25, 0x01	; 1
 264:	9f 93       	push	r25
 266:	8f 93       	push	r24
 268:	4a d0       	rcall	.+148    	; 0x2fe <printf>
	printf(" %d day\r\n", bcd_to_decimal(I2C_receive_ACK()));
 26a:	48 df       	rcall	.-368    	; 0xfc <I2C_receive_ACK>
 26c:	61 df       	rcall	.-318    	; 0x130 <bcd_to_decimal>
 26e:	1f 92       	push	r1
 270:	8f 93       	push	r24
 272:	85 ea       	ldi	r24, 0xA5	; 165
 274:	91 e0       	ldi	r25, 0x01	; 1
 276:	9f 93       	push	r25
 278:	8f 93       	push	r24
 27a:	41 d0       	rcall	.+130    	; 0x2fe <printf>
	printf(" %d month\r\n", bcd_to_decimal(I2C_receive_ACK()));
 27c:	3f df       	rcall	.-386    	; 0xfc <I2C_receive_ACK>
 27e:	58 df       	rcall	.-336    	; 0x130 <bcd_to_decimal>
 280:	1f 92       	push	r1
 282:	8f 93       	push	r24
 284:	8f ea       	ldi	r24, 0xAF	; 175
 286:	91 e0       	ldi	r25, 0x01	; 1
 288:	9f 93       	push	r25
 28a:	8f 93       	push	r24
 28c:	38 d0       	rcall	.+112    	; 0x2fe <printf>
	printf(" %d year\r\n", bcd_to_decimal(I2C_receive_NACK()));
 28e:	41 df       	rcall	.-382    	; 0x112 <I2C_receive_NACK>
 290:	4f df       	rcall	.-354    	; 0x130 <bcd_to_decimal>
 292:	1f 92       	push	r1
 294:	8f 93       	push	r24
 296:	8b eb       	ldi	r24, 0xBB	; 187
 298:	91 e0       	ldi	r25, 0x01	; 1
 29a:	9f 93       	push	r25
 29c:	8f 93       	push	r24
 29e:	2f d0       	rcall	.+94     	; 0x2fe <printf>
	
	I2C_stop();					// I2C 정지
 2a0:	43 df       	rcall	.-378    	; 0x128 <I2C_stop>
 2a2:	0f b6       	in	r0, 0x3f	; 63
 2a4:	f8 94       	cli
 2a6:	de bf       	out	0x3e, r29	; 62
 2a8:	0f be       	out	0x3f, r0	; 63
 2aa:	cd bf       	out	0x3d, r28	; 61

	while(1);
 2ac:	ff cf       	rjmp	.-2      	; 0x2ac <main+0x140>

000002ae <UART1_init>:
﻿#include <avr/io.h>

void UART1_init(void)
{
	UBRR1H = 0x00;			// 9600 보율로 설정
 2ae:	10 92 98 00 	sts	0x0098, r1	; 0x800098 <__TEXT_REGION_LENGTH__+0x7e0098>
	UBRR1L = 207;
 2b2:	8f ec       	ldi	r24, 0xCF	; 207
 2b4:	80 93 99 00 	sts	0x0099, r24	; 0x800099 <__TEXT_REGION_LENGTH__+0x7e0099>
	
	UCSR1A |= _BV(U2X1);			// 2배속 모드
 2b8:	eb e9       	ldi	r30, 0x9B	; 155
 2ba:	f0 e0       	ldi	r31, 0x00	; 0
 2bc:	80 81       	ld	r24, Z
 2be:	82 60       	ori	r24, 0x02	; 2
 2c0:	80 83       	st	Z, r24
	// 비동기, 8비트 데이터, 패리티 없음, 1비트 정지 비트 모드
	UCSR1C |= 0x06;
 2c2:	ed e9       	ldi	r30, 0x9D	; 157
 2c4:	f0 e0       	ldi	r31, 0x00	; 0
 2c6:	80 81       	ld	r24, Z
 2c8:	86 60       	ori	r24, 0x06	; 6
 2ca:	80 83       	st	Z, r24
	
	UCSR1B |= _BV(RXEN1);		// 송수신 가능
 2cc:	ea e9       	ldi	r30, 0x9A	; 154
 2ce:	f0 e0       	ldi	r31, 0x00	; 0
 2d0:	80 81       	ld	r24, Z
 2d2:	80 61       	ori	r24, 0x10	; 16
 2d4:	80 83       	st	Z, r24
	UCSR1B |= _BV(TXEN1);
 2d6:	80 81       	ld	r24, Z
 2d8:	88 60       	ori	r24, 0x08	; 8
 2da:	80 83       	st	Z, r24
 2dc:	08 95       	ret

000002de <UART1_transmit>:
}

void UART1_transmit(char data)
{
	while( !(UCSR1A & (1 << UDRE1)) );	// 송신 가능 대기
 2de:	eb e9       	ldi	r30, 0x9B	; 155
 2e0:	f0 e0       	ldi	r31, 0x00	; 0
 2e2:	90 81       	ld	r25, Z
 2e4:	95 ff       	sbrs	r25, 5
 2e6:	fd cf       	rjmp	.-6      	; 0x2e2 <UART1_transmit+0x4>
	UDR1 = data;				// 데이터 전송
 2e8:	80 93 9c 00 	sts	0x009C, r24	; 0x80009c <__TEXT_REGION_LENGTH__+0x7e009c>
 2ec:	08 95       	ret

000002ee <UART1_receive>:
}

unsigned char UART1_receive(void)
{
	while( !(UCSR1A & (1<<RXC1)) );	// 데이터 수신 대기
 2ee:	eb e9       	ldi	r30, 0x9B	; 155
 2f0:	f0 e0       	ldi	r31, 0x00	; 0
 2f2:	80 81       	ld	r24, Z
 2f4:	88 23       	and	r24, r24
 2f6:	ec f7       	brge	.-6      	; 0x2f2 <UART1_receive+0x4>
	return UDR1;
 2f8:	80 91 9c 00 	lds	r24, 0x009C	; 0x80009c <__TEXT_REGION_LENGTH__+0x7e009c>
}
 2fc:	08 95       	ret

000002fe <printf>:
 2fe:	cf 93       	push	r28
 300:	df 93       	push	r29
 302:	cd b7       	in	r28, 0x3d	; 61
 304:	de b7       	in	r29, 0x3e	; 62
 306:	ae 01       	movw	r20, r28
 308:	4b 5f       	subi	r20, 0xFB	; 251
 30a:	5f 4f       	sbci	r21, 0xFF	; 255
 30c:	fa 01       	movw	r30, r20
 30e:	61 91       	ld	r22, Z+
 310:	71 91       	ld	r23, Z+
 312:	af 01       	movw	r20, r30
 314:	80 91 c8 01 	lds	r24, 0x01C8	; 0x8001c8 <__data_end+0x2>
 318:	90 91 c9 01 	lds	r25, 0x01C9	; 0x8001c9 <__data_end+0x3>
 31c:	33 d0       	rcall	.+102    	; 0x384 <vfprintf>
 31e:	df 91       	pop	r29
 320:	cf 91       	pop	r28
 322:	08 95       	ret

00000324 <puts>:
 324:	0f 93       	push	r16
 326:	1f 93       	push	r17
 328:	cf 93       	push	r28
 32a:	df 93       	push	r29
 32c:	e0 91 c8 01 	lds	r30, 0x01C8	; 0x8001c8 <__data_end+0x2>
 330:	f0 91 c9 01 	lds	r31, 0x01C9	; 0x8001c9 <__data_end+0x3>
 334:	23 81       	ldd	r18, Z+3	; 0x03
 336:	21 ff       	sbrs	r18, 1
 338:	1b c0       	rjmp	.+54     	; 0x370 <puts+0x4c>
 33a:	8c 01       	movw	r16, r24
 33c:	d0 e0       	ldi	r29, 0x00	; 0
 33e:	c0 e0       	ldi	r28, 0x00	; 0
 340:	f8 01       	movw	r30, r16
 342:	81 91       	ld	r24, Z+
 344:	8f 01       	movw	r16, r30
 346:	60 91 c8 01 	lds	r22, 0x01C8	; 0x8001c8 <__data_end+0x2>
 34a:	70 91 c9 01 	lds	r23, 0x01C9	; 0x8001c9 <__data_end+0x3>
 34e:	db 01       	movw	r26, r22
 350:	18 96       	adiw	r26, 0x08	; 8
 352:	ed 91       	ld	r30, X+
 354:	fc 91       	ld	r31, X
 356:	19 97       	sbiw	r26, 0x09	; 9
 358:	88 23       	and	r24, r24
 35a:	31 f0       	breq	.+12     	; 0x368 <puts+0x44>
 35c:	09 95       	icall
 35e:	89 2b       	or	r24, r25
 360:	79 f3       	breq	.-34     	; 0x340 <puts+0x1c>
 362:	df ef       	ldi	r29, 0xFF	; 255
 364:	cf ef       	ldi	r28, 0xFF	; 255
 366:	ec cf       	rjmp	.-40     	; 0x340 <puts+0x1c>
 368:	8a e0       	ldi	r24, 0x0A	; 10
 36a:	09 95       	icall
 36c:	89 2b       	or	r24, r25
 36e:	19 f0       	breq	.+6      	; 0x376 <puts+0x52>
 370:	8f ef       	ldi	r24, 0xFF	; 255
 372:	9f ef       	ldi	r25, 0xFF	; 255
 374:	02 c0       	rjmp	.+4      	; 0x37a <puts+0x56>
 376:	8d 2f       	mov	r24, r29
 378:	9c 2f       	mov	r25, r28
 37a:	df 91       	pop	r29
 37c:	cf 91       	pop	r28
 37e:	1f 91       	pop	r17
 380:	0f 91       	pop	r16
 382:	08 95       	ret

00000384 <vfprintf>:
 384:	2f 92       	push	r2
 386:	3f 92       	push	r3
 388:	4f 92       	push	r4
 38a:	5f 92       	push	r5
 38c:	6f 92       	push	r6
 38e:	7f 92       	push	r7
 390:	8f 92       	push	r8
 392:	9f 92       	push	r9
 394:	af 92       	push	r10
 396:	bf 92       	push	r11
 398:	cf 92       	push	r12
 39a:	df 92       	push	r13
 39c:	ef 92       	push	r14
 39e:	ff 92       	push	r15
 3a0:	0f 93       	push	r16
 3a2:	1f 93       	push	r17
 3a4:	cf 93       	push	r28
 3a6:	df 93       	push	r29
 3a8:	cd b7       	in	r28, 0x3d	; 61
 3aa:	de b7       	in	r29, 0x3e	; 62
 3ac:	2c 97       	sbiw	r28, 0x0c	; 12
 3ae:	0f b6       	in	r0, 0x3f	; 63
 3b0:	f8 94       	cli
 3b2:	de bf       	out	0x3e, r29	; 62
 3b4:	0f be       	out	0x3f, r0	; 63
 3b6:	cd bf       	out	0x3d, r28	; 61
 3b8:	7c 01       	movw	r14, r24
 3ba:	6b 01       	movw	r12, r22
 3bc:	8a 01       	movw	r16, r20
 3be:	fc 01       	movw	r30, r24
 3c0:	17 82       	std	Z+7, r1	; 0x07
 3c2:	16 82       	std	Z+6, r1	; 0x06
 3c4:	83 81       	ldd	r24, Z+3	; 0x03
 3c6:	81 ff       	sbrs	r24, 1
 3c8:	b0 c1       	rjmp	.+864    	; 0x72a <__FUSE_REGION_LENGTH__+0x32a>
 3ca:	ce 01       	movw	r24, r28
 3cc:	01 96       	adiw	r24, 0x01	; 1
 3ce:	4c 01       	movw	r8, r24
 3d0:	f7 01       	movw	r30, r14
 3d2:	93 81       	ldd	r25, Z+3	; 0x03
 3d4:	f6 01       	movw	r30, r12
 3d6:	93 fd       	sbrc	r25, 3
 3d8:	85 91       	lpm	r24, Z+
 3da:	93 ff       	sbrs	r25, 3
 3dc:	81 91       	ld	r24, Z+
 3de:	6f 01       	movw	r12, r30
 3e0:	88 23       	and	r24, r24
 3e2:	09 f4       	brne	.+2      	; 0x3e6 <vfprintf+0x62>
 3e4:	9e c1       	rjmp	.+828    	; 0x722 <__FUSE_REGION_LENGTH__+0x322>
 3e6:	85 32       	cpi	r24, 0x25	; 37
 3e8:	39 f4       	brne	.+14     	; 0x3f8 <vfprintf+0x74>
 3ea:	93 fd       	sbrc	r25, 3
 3ec:	85 91       	lpm	r24, Z+
 3ee:	93 ff       	sbrs	r25, 3
 3f0:	81 91       	ld	r24, Z+
 3f2:	6f 01       	movw	r12, r30
 3f4:	85 32       	cpi	r24, 0x25	; 37
 3f6:	21 f4       	brne	.+8      	; 0x400 <__FUSE_REGION_LENGTH__>
 3f8:	b7 01       	movw	r22, r14
 3fa:	90 e0       	ldi	r25, 0x00	; 0
 3fc:	c7 d1       	rcall	.+910    	; 0x78c <fputc>
 3fe:	e8 cf       	rjmp	.-48     	; 0x3d0 <vfprintf+0x4c>
 400:	51 2c       	mov	r5, r1
 402:	31 2c       	mov	r3, r1
 404:	20 e0       	ldi	r18, 0x00	; 0
 406:	20 32       	cpi	r18, 0x20	; 32
 408:	a0 f4       	brcc	.+40     	; 0x432 <__FUSE_REGION_LENGTH__+0x32>
 40a:	8b 32       	cpi	r24, 0x2B	; 43
 40c:	69 f0       	breq	.+26     	; 0x428 <__FUSE_REGION_LENGTH__+0x28>
 40e:	30 f4       	brcc	.+12     	; 0x41c <__FUSE_REGION_LENGTH__+0x1c>
 410:	80 32       	cpi	r24, 0x20	; 32
 412:	59 f0       	breq	.+22     	; 0x42a <__FUSE_REGION_LENGTH__+0x2a>
 414:	83 32       	cpi	r24, 0x23	; 35
 416:	69 f4       	brne	.+26     	; 0x432 <__FUSE_REGION_LENGTH__+0x32>
 418:	20 61       	ori	r18, 0x10	; 16
 41a:	2c c0       	rjmp	.+88     	; 0x474 <__FUSE_REGION_LENGTH__+0x74>
 41c:	8d 32       	cpi	r24, 0x2D	; 45
 41e:	39 f0       	breq	.+14     	; 0x42e <__FUSE_REGION_LENGTH__+0x2e>
 420:	80 33       	cpi	r24, 0x30	; 48
 422:	39 f4       	brne	.+14     	; 0x432 <__FUSE_REGION_LENGTH__+0x32>
 424:	21 60       	ori	r18, 0x01	; 1
 426:	26 c0       	rjmp	.+76     	; 0x474 <__FUSE_REGION_LENGTH__+0x74>
 428:	22 60       	ori	r18, 0x02	; 2
 42a:	24 60       	ori	r18, 0x04	; 4
 42c:	23 c0       	rjmp	.+70     	; 0x474 <__FUSE_REGION_LENGTH__+0x74>
 42e:	28 60       	ori	r18, 0x08	; 8
 430:	21 c0       	rjmp	.+66     	; 0x474 <__FUSE_REGION_LENGTH__+0x74>
 432:	27 fd       	sbrc	r18, 7
 434:	27 c0       	rjmp	.+78     	; 0x484 <__FUSE_REGION_LENGTH__+0x84>
 436:	30 ed       	ldi	r19, 0xD0	; 208
 438:	38 0f       	add	r19, r24
 43a:	3a 30       	cpi	r19, 0x0A	; 10
 43c:	78 f4       	brcc	.+30     	; 0x45c <__FUSE_REGION_LENGTH__+0x5c>
 43e:	26 ff       	sbrs	r18, 6
 440:	06 c0       	rjmp	.+12     	; 0x44e <__FUSE_REGION_LENGTH__+0x4e>
 442:	fa e0       	ldi	r31, 0x0A	; 10
 444:	5f 9e       	mul	r5, r31
 446:	30 0d       	add	r19, r0
 448:	11 24       	eor	r1, r1
 44a:	53 2e       	mov	r5, r19
 44c:	13 c0       	rjmp	.+38     	; 0x474 <__FUSE_REGION_LENGTH__+0x74>
 44e:	8a e0       	ldi	r24, 0x0A	; 10
 450:	38 9e       	mul	r3, r24
 452:	30 0d       	add	r19, r0
 454:	11 24       	eor	r1, r1
 456:	33 2e       	mov	r3, r19
 458:	20 62       	ori	r18, 0x20	; 32
 45a:	0c c0       	rjmp	.+24     	; 0x474 <__FUSE_REGION_LENGTH__+0x74>
 45c:	8e 32       	cpi	r24, 0x2E	; 46
 45e:	21 f4       	brne	.+8      	; 0x468 <__FUSE_REGION_LENGTH__+0x68>
 460:	26 fd       	sbrc	r18, 6
 462:	5f c1       	rjmp	.+702    	; 0x722 <__FUSE_REGION_LENGTH__+0x322>
 464:	20 64       	ori	r18, 0x40	; 64
 466:	06 c0       	rjmp	.+12     	; 0x474 <__FUSE_REGION_LENGTH__+0x74>
 468:	8c 36       	cpi	r24, 0x6C	; 108
 46a:	11 f4       	brne	.+4      	; 0x470 <__FUSE_REGION_LENGTH__+0x70>
 46c:	20 68       	ori	r18, 0x80	; 128
 46e:	02 c0       	rjmp	.+4      	; 0x474 <__FUSE_REGION_LENGTH__+0x74>
 470:	88 36       	cpi	r24, 0x68	; 104
 472:	41 f4       	brne	.+16     	; 0x484 <__FUSE_REGION_LENGTH__+0x84>
 474:	f6 01       	movw	r30, r12
 476:	93 fd       	sbrc	r25, 3
 478:	85 91       	lpm	r24, Z+
 47a:	93 ff       	sbrs	r25, 3
 47c:	81 91       	ld	r24, Z+
 47e:	6f 01       	movw	r12, r30
 480:	81 11       	cpse	r24, r1
 482:	c1 cf       	rjmp	.-126    	; 0x406 <__FUSE_REGION_LENGTH__+0x6>
 484:	98 2f       	mov	r25, r24
 486:	9f 7d       	andi	r25, 0xDF	; 223
 488:	95 54       	subi	r25, 0x45	; 69
 48a:	93 30       	cpi	r25, 0x03	; 3
 48c:	28 f4       	brcc	.+10     	; 0x498 <__FUSE_REGION_LENGTH__+0x98>
 48e:	0c 5f       	subi	r16, 0xFC	; 252
 490:	1f 4f       	sbci	r17, 0xFF	; 255
 492:	ff e3       	ldi	r31, 0x3F	; 63
 494:	f9 83       	std	Y+1, r31	; 0x01
 496:	0d c0       	rjmp	.+26     	; 0x4b2 <__FUSE_REGION_LENGTH__+0xb2>
 498:	83 36       	cpi	r24, 0x63	; 99
 49a:	31 f0       	breq	.+12     	; 0x4a8 <__FUSE_REGION_LENGTH__+0xa8>
 49c:	83 37       	cpi	r24, 0x73	; 115
 49e:	71 f0       	breq	.+28     	; 0x4bc <__FUSE_REGION_LENGTH__+0xbc>
 4a0:	83 35       	cpi	r24, 0x53	; 83
 4a2:	09 f0       	breq	.+2      	; 0x4a6 <__FUSE_REGION_LENGTH__+0xa6>
 4a4:	57 c0       	rjmp	.+174    	; 0x554 <__FUSE_REGION_LENGTH__+0x154>
 4a6:	21 c0       	rjmp	.+66     	; 0x4ea <__FUSE_REGION_LENGTH__+0xea>
 4a8:	f8 01       	movw	r30, r16
 4aa:	80 81       	ld	r24, Z
 4ac:	89 83       	std	Y+1, r24	; 0x01
 4ae:	0e 5f       	subi	r16, 0xFE	; 254
 4b0:	1f 4f       	sbci	r17, 0xFF	; 255
 4b2:	44 24       	eor	r4, r4
 4b4:	43 94       	inc	r4
 4b6:	51 2c       	mov	r5, r1
 4b8:	54 01       	movw	r10, r8
 4ba:	14 c0       	rjmp	.+40     	; 0x4e4 <__FUSE_REGION_LENGTH__+0xe4>
 4bc:	38 01       	movw	r6, r16
 4be:	f2 e0       	ldi	r31, 0x02	; 2
 4c0:	6f 0e       	add	r6, r31
 4c2:	71 1c       	adc	r7, r1
 4c4:	f8 01       	movw	r30, r16
 4c6:	a0 80       	ld	r10, Z
 4c8:	b1 80       	ldd	r11, Z+1	; 0x01
 4ca:	26 ff       	sbrs	r18, 6
 4cc:	03 c0       	rjmp	.+6      	; 0x4d4 <__FUSE_REGION_LENGTH__+0xd4>
 4ce:	65 2d       	mov	r22, r5
 4d0:	70 e0       	ldi	r23, 0x00	; 0
 4d2:	02 c0       	rjmp	.+4      	; 0x4d8 <__FUSE_REGION_LENGTH__+0xd8>
 4d4:	6f ef       	ldi	r22, 0xFF	; 255
 4d6:	7f ef       	ldi	r23, 0xFF	; 255
 4d8:	c5 01       	movw	r24, r10
 4da:	2c 87       	std	Y+12, r18	; 0x0c
 4dc:	4c d1       	rcall	.+664    	; 0x776 <strnlen>
 4de:	2c 01       	movw	r4, r24
 4e0:	83 01       	movw	r16, r6
 4e2:	2c 85       	ldd	r18, Y+12	; 0x0c
 4e4:	2f 77       	andi	r18, 0x7F	; 127
 4e6:	22 2e       	mov	r2, r18
 4e8:	16 c0       	rjmp	.+44     	; 0x516 <__FUSE_REGION_LENGTH__+0x116>
 4ea:	38 01       	movw	r6, r16
 4ec:	f2 e0       	ldi	r31, 0x02	; 2
 4ee:	6f 0e       	add	r6, r31
 4f0:	71 1c       	adc	r7, r1
 4f2:	f8 01       	movw	r30, r16
 4f4:	a0 80       	ld	r10, Z
 4f6:	b1 80       	ldd	r11, Z+1	; 0x01
 4f8:	26 ff       	sbrs	r18, 6
 4fa:	03 c0       	rjmp	.+6      	; 0x502 <__FUSE_REGION_LENGTH__+0x102>
 4fc:	65 2d       	mov	r22, r5
 4fe:	70 e0       	ldi	r23, 0x00	; 0
 500:	02 c0       	rjmp	.+4      	; 0x506 <__FUSE_REGION_LENGTH__+0x106>
 502:	6f ef       	ldi	r22, 0xFF	; 255
 504:	7f ef       	ldi	r23, 0xFF	; 255
 506:	c5 01       	movw	r24, r10
 508:	2c 87       	std	Y+12, r18	; 0x0c
 50a:	2a d1       	rcall	.+596    	; 0x760 <strnlen_P>
 50c:	2c 01       	movw	r4, r24
 50e:	2c 85       	ldd	r18, Y+12	; 0x0c
 510:	20 68       	ori	r18, 0x80	; 128
 512:	22 2e       	mov	r2, r18
 514:	83 01       	movw	r16, r6
 516:	23 fc       	sbrc	r2, 3
 518:	19 c0       	rjmp	.+50     	; 0x54c <__FUSE_REGION_LENGTH__+0x14c>
 51a:	83 2d       	mov	r24, r3
 51c:	90 e0       	ldi	r25, 0x00	; 0
 51e:	48 16       	cp	r4, r24
 520:	59 06       	cpc	r5, r25
 522:	a0 f4       	brcc	.+40     	; 0x54c <__FUSE_REGION_LENGTH__+0x14c>
 524:	b7 01       	movw	r22, r14
 526:	80 e2       	ldi	r24, 0x20	; 32
 528:	90 e0       	ldi	r25, 0x00	; 0
 52a:	30 d1       	rcall	.+608    	; 0x78c <fputc>
 52c:	3a 94       	dec	r3
 52e:	f5 cf       	rjmp	.-22     	; 0x51a <__FUSE_REGION_LENGTH__+0x11a>
 530:	f5 01       	movw	r30, r10
 532:	27 fc       	sbrc	r2, 7
 534:	85 91       	lpm	r24, Z+
 536:	27 fe       	sbrs	r2, 7
 538:	81 91       	ld	r24, Z+
 53a:	5f 01       	movw	r10, r30
 53c:	b7 01       	movw	r22, r14
 53e:	90 e0       	ldi	r25, 0x00	; 0
 540:	25 d1       	rcall	.+586    	; 0x78c <fputc>
 542:	31 10       	cpse	r3, r1
 544:	3a 94       	dec	r3
 546:	f1 e0       	ldi	r31, 0x01	; 1
 548:	4f 1a       	sub	r4, r31
 54a:	51 08       	sbc	r5, r1
 54c:	41 14       	cp	r4, r1
 54e:	51 04       	cpc	r5, r1
 550:	79 f7       	brne	.-34     	; 0x530 <__FUSE_REGION_LENGTH__+0x130>
 552:	de c0       	rjmp	.+444    	; 0x710 <__FUSE_REGION_LENGTH__+0x310>
 554:	84 36       	cpi	r24, 0x64	; 100
 556:	11 f0       	breq	.+4      	; 0x55c <__FUSE_REGION_LENGTH__+0x15c>
 558:	89 36       	cpi	r24, 0x69	; 105
 55a:	31 f5       	brne	.+76     	; 0x5a8 <__FUSE_REGION_LENGTH__+0x1a8>
 55c:	f8 01       	movw	r30, r16
 55e:	27 ff       	sbrs	r18, 7
 560:	07 c0       	rjmp	.+14     	; 0x570 <__FUSE_REGION_LENGTH__+0x170>
 562:	60 81       	ld	r22, Z
 564:	71 81       	ldd	r23, Z+1	; 0x01
 566:	82 81       	ldd	r24, Z+2	; 0x02
 568:	93 81       	ldd	r25, Z+3	; 0x03
 56a:	0c 5f       	subi	r16, 0xFC	; 252
 56c:	1f 4f       	sbci	r17, 0xFF	; 255
 56e:	08 c0       	rjmp	.+16     	; 0x580 <__FUSE_REGION_LENGTH__+0x180>
 570:	60 81       	ld	r22, Z
 572:	71 81       	ldd	r23, Z+1	; 0x01
 574:	07 2e       	mov	r0, r23
 576:	00 0c       	add	r0, r0
 578:	88 0b       	sbc	r24, r24
 57a:	99 0b       	sbc	r25, r25
 57c:	0e 5f       	subi	r16, 0xFE	; 254
 57e:	1f 4f       	sbci	r17, 0xFF	; 255
 580:	2f 76       	andi	r18, 0x6F	; 111
 582:	72 2e       	mov	r7, r18
 584:	97 ff       	sbrs	r25, 7
 586:	09 c0       	rjmp	.+18     	; 0x59a <__FUSE_REGION_LENGTH__+0x19a>
 588:	90 95       	com	r25
 58a:	80 95       	com	r24
 58c:	70 95       	com	r23
 58e:	61 95       	neg	r22
 590:	7f 4f       	sbci	r23, 0xFF	; 255
 592:	8f 4f       	sbci	r24, 0xFF	; 255
 594:	9f 4f       	sbci	r25, 0xFF	; 255
 596:	20 68       	ori	r18, 0x80	; 128
 598:	72 2e       	mov	r7, r18
 59a:	2a e0       	ldi	r18, 0x0A	; 10
 59c:	30 e0       	ldi	r19, 0x00	; 0
 59e:	a4 01       	movw	r20, r8
 5a0:	2d d1       	rcall	.+602    	; 0x7fc <__ultoa_invert>
 5a2:	a8 2e       	mov	r10, r24
 5a4:	a8 18       	sub	r10, r8
 5a6:	43 c0       	rjmp	.+134    	; 0x62e <__FUSE_REGION_LENGTH__+0x22e>
 5a8:	85 37       	cpi	r24, 0x75	; 117
 5aa:	29 f4       	brne	.+10     	; 0x5b6 <__FUSE_REGION_LENGTH__+0x1b6>
 5ac:	2f 7e       	andi	r18, 0xEF	; 239
 5ae:	b2 2e       	mov	r11, r18
 5b0:	2a e0       	ldi	r18, 0x0A	; 10
 5b2:	30 e0       	ldi	r19, 0x00	; 0
 5b4:	25 c0       	rjmp	.+74     	; 0x600 <__FUSE_REGION_LENGTH__+0x200>
 5b6:	f2 2f       	mov	r31, r18
 5b8:	f9 7f       	andi	r31, 0xF9	; 249
 5ba:	bf 2e       	mov	r11, r31
 5bc:	8f 36       	cpi	r24, 0x6F	; 111
 5be:	c1 f0       	breq	.+48     	; 0x5f0 <__FUSE_REGION_LENGTH__+0x1f0>
 5c0:	18 f4       	brcc	.+6      	; 0x5c8 <__FUSE_REGION_LENGTH__+0x1c8>
 5c2:	88 35       	cpi	r24, 0x58	; 88
 5c4:	79 f0       	breq	.+30     	; 0x5e4 <__FUSE_REGION_LENGTH__+0x1e4>
 5c6:	ad c0       	rjmp	.+346    	; 0x722 <__FUSE_REGION_LENGTH__+0x322>
 5c8:	80 37       	cpi	r24, 0x70	; 112
 5ca:	19 f0       	breq	.+6      	; 0x5d2 <__FUSE_REGION_LENGTH__+0x1d2>
 5cc:	88 37       	cpi	r24, 0x78	; 120
 5ce:	21 f0       	breq	.+8      	; 0x5d8 <__FUSE_REGION_LENGTH__+0x1d8>
 5d0:	a8 c0       	rjmp	.+336    	; 0x722 <__FUSE_REGION_LENGTH__+0x322>
 5d2:	2f 2f       	mov	r18, r31
 5d4:	20 61       	ori	r18, 0x10	; 16
 5d6:	b2 2e       	mov	r11, r18
 5d8:	b4 fe       	sbrs	r11, 4
 5da:	0d c0       	rjmp	.+26     	; 0x5f6 <__FUSE_REGION_LENGTH__+0x1f6>
 5dc:	8b 2d       	mov	r24, r11
 5de:	84 60       	ori	r24, 0x04	; 4
 5e0:	b8 2e       	mov	r11, r24
 5e2:	09 c0       	rjmp	.+18     	; 0x5f6 <__FUSE_REGION_LENGTH__+0x1f6>
 5e4:	24 ff       	sbrs	r18, 4
 5e6:	0a c0       	rjmp	.+20     	; 0x5fc <__FUSE_REGION_LENGTH__+0x1fc>
 5e8:	9f 2f       	mov	r25, r31
 5ea:	96 60       	ori	r25, 0x06	; 6
 5ec:	b9 2e       	mov	r11, r25
 5ee:	06 c0       	rjmp	.+12     	; 0x5fc <__FUSE_REGION_LENGTH__+0x1fc>
 5f0:	28 e0       	ldi	r18, 0x08	; 8
 5f2:	30 e0       	ldi	r19, 0x00	; 0
 5f4:	05 c0       	rjmp	.+10     	; 0x600 <__FUSE_REGION_LENGTH__+0x200>
 5f6:	20 e1       	ldi	r18, 0x10	; 16
 5f8:	30 e0       	ldi	r19, 0x00	; 0
 5fa:	02 c0       	rjmp	.+4      	; 0x600 <__FUSE_REGION_LENGTH__+0x200>
 5fc:	20 e1       	ldi	r18, 0x10	; 16
 5fe:	32 e0       	ldi	r19, 0x02	; 2
 600:	f8 01       	movw	r30, r16
 602:	b7 fe       	sbrs	r11, 7
 604:	07 c0       	rjmp	.+14     	; 0x614 <__FUSE_REGION_LENGTH__+0x214>
 606:	60 81       	ld	r22, Z
 608:	71 81       	ldd	r23, Z+1	; 0x01
 60a:	82 81       	ldd	r24, Z+2	; 0x02
 60c:	93 81       	ldd	r25, Z+3	; 0x03
 60e:	0c 5f       	subi	r16, 0xFC	; 252
 610:	1f 4f       	sbci	r17, 0xFF	; 255
 612:	06 c0       	rjmp	.+12     	; 0x620 <__FUSE_REGION_LENGTH__+0x220>
 614:	60 81       	ld	r22, Z
 616:	71 81       	ldd	r23, Z+1	; 0x01
 618:	80 e0       	ldi	r24, 0x00	; 0
 61a:	90 e0       	ldi	r25, 0x00	; 0
 61c:	0e 5f       	subi	r16, 0xFE	; 254
 61e:	1f 4f       	sbci	r17, 0xFF	; 255
 620:	a4 01       	movw	r20, r8
 622:	ec d0       	rcall	.+472    	; 0x7fc <__ultoa_invert>
 624:	a8 2e       	mov	r10, r24
 626:	a8 18       	sub	r10, r8
 628:	fb 2d       	mov	r31, r11
 62a:	ff 77       	andi	r31, 0x7F	; 127
 62c:	7f 2e       	mov	r7, r31
 62e:	76 fe       	sbrs	r7, 6
 630:	0b c0       	rjmp	.+22     	; 0x648 <__FUSE_REGION_LENGTH__+0x248>
 632:	37 2d       	mov	r19, r7
 634:	3e 7f       	andi	r19, 0xFE	; 254
 636:	a5 14       	cp	r10, r5
 638:	50 f4       	brcc	.+20     	; 0x64e <__FUSE_REGION_LENGTH__+0x24e>
 63a:	74 fe       	sbrs	r7, 4
 63c:	0a c0       	rjmp	.+20     	; 0x652 <__FUSE_REGION_LENGTH__+0x252>
 63e:	72 fc       	sbrc	r7, 2
 640:	08 c0       	rjmp	.+16     	; 0x652 <__FUSE_REGION_LENGTH__+0x252>
 642:	37 2d       	mov	r19, r7
 644:	3e 7e       	andi	r19, 0xEE	; 238
 646:	05 c0       	rjmp	.+10     	; 0x652 <__FUSE_REGION_LENGTH__+0x252>
 648:	ba 2c       	mov	r11, r10
 64a:	37 2d       	mov	r19, r7
 64c:	03 c0       	rjmp	.+6      	; 0x654 <__FUSE_REGION_LENGTH__+0x254>
 64e:	ba 2c       	mov	r11, r10
 650:	01 c0       	rjmp	.+2      	; 0x654 <__FUSE_REGION_LENGTH__+0x254>
 652:	b5 2c       	mov	r11, r5
 654:	34 ff       	sbrs	r19, 4
 656:	0d c0       	rjmp	.+26     	; 0x672 <__FUSE_REGION_LENGTH__+0x272>
 658:	fe 01       	movw	r30, r28
 65a:	ea 0d       	add	r30, r10
 65c:	f1 1d       	adc	r31, r1
 65e:	80 81       	ld	r24, Z
 660:	80 33       	cpi	r24, 0x30	; 48
 662:	11 f4       	brne	.+4      	; 0x668 <__FUSE_REGION_LENGTH__+0x268>
 664:	39 7e       	andi	r19, 0xE9	; 233
 666:	09 c0       	rjmp	.+18     	; 0x67a <__FUSE_REGION_LENGTH__+0x27a>
 668:	32 ff       	sbrs	r19, 2
 66a:	06 c0       	rjmp	.+12     	; 0x678 <__FUSE_REGION_LENGTH__+0x278>
 66c:	b3 94       	inc	r11
 66e:	b3 94       	inc	r11
 670:	04 c0       	rjmp	.+8      	; 0x67a <__FUSE_REGION_LENGTH__+0x27a>
 672:	83 2f       	mov	r24, r19
 674:	86 78       	andi	r24, 0x86	; 134
 676:	09 f0       	breq	.+2      	; 0x67a <__FUSE_REGION_LENGTH__+0x27a>
 678:	b3 94       	inc	r11
 67a:	33 fd       	sbrc	r19, 3
 67c:	12 c0       	rjmp	.+36     	; 0x6a2 <__FUSE_REGION_LENGTH__+0x2a2>
 67e:	30 ff       	sbrs	r19, 0
 680:	06 c0       	rjmp	.+12     	; 0x68e <__FUSE_REGION_LENGTH__+0x28e>
 682:	5a 2c       	mov	r5, r10
 684:	b3 14       	cp	r11, r3
 686:	18 f4       	brcc	.+6      	; 0x68e <__FUSE_REGION_LENGTH__+0x28e>
 688:	53 0c       	add	r5, r3
 68a:	5b 18       	sub	r5, r11
 68c:	b3 2c       	mov	r11, r3
 68e:	b3 14       	cp	r11, r3
 690:	60 f4       	brcc	.+24     	; 0x6aa <__FUSE_REGION_LENGTH__+0x2aa>
 692:	b7 01       	movw	r22, r14
 694:	80 e2       	ldi	r24, 0x20	; 32
 696:	90 e0       	ldi	r25, 0x00	; 0
 698:	3c 87       	std	Y+12, r19	; 0x0c
 69a:	78 d0       	rcall	.+240    	; 0x78c <fputc>
 69c:	b3 94       	inc	r11
 69e:	3c 85       	ldd	r19, Y+12	; 0x0c
 6a0:	f6 cf       	rjmp	.-20     	; 0x68e <__FUSE_REGION_LENGTH__+0x28e>
 6a2:	b3 14       	cp	r11, r3
 6a4:	10 f4       	brcc	.+4      	; 0x6aa <__FUSE_REGION_LENGTH__+0x2aa>
 6a6:	3b 18       	sub	r3, r11
 6a8:	01 c0       	rjmp	.+2      	; 0x6ac <__FUSE_REGION_LENGTH__+0x2ac>
 6aa:	31 2c       	mov	r3, r1
 6ac:	34 ff       	sbrs	r19, 4
 6ae:	11 c0       	rjmp	.+34     	; 0x6d2 <__FUSE_REGION_LENGTH__+0x2d2>
 6b0:	b7 01       	movw	r22, r14
 6b2:	80 e3       	ldi	r24, 0x30	; 48
 6b4:	90 e0       	ldi	r25, 0x00	; 0
 6b6:	3c 87       	std	Y+12, r19	; 0x0c
 6b8:	69 d0       	rcall	.+210    	; 0x78c <fputc>
 6ba:	3c 85       	ldd	r19, Y+12	; 0x0c
 6bc:	32 ff       	sbrs	r19, 2
 6be:	16 c0       	rjmp	.+44     	; 0x6ec <__FUSE_REGION_LENGTH__+0x2ec>
 6c0:	31 fd       	sbrc	r19, 1
 6c2:	03 c0       	rjmp	.+6      	; 0x6ca <__FUSE_REGION_LENGTH__+0x2ca>
 6c4:	88 e7       	ldi	r24, 0x78	; 120
 6c6:	90 e0       	ldi	r25, 0x00	; 0
 6c8:	02 c0       	rjmp	.+4      	; 0x6ce <__FUSE_REGION_LENGTH__+0x2ce>
 6ca:	88 e5       	ldi	r24, 0x58	; 88
 6cc:	90 e0       	ldi	r25, 0x00	; 0
 6ce:	b7 01       	movw	r22, r14
 6d0:	0c c0       	rjmp	.+24     	; 0x6ea <__FUSE_REGION_LENGTH__+0x2ea>
 6d2:	83 2f       	mov	r24, r19
 6d4:	86 78       	andi	r24, 0x86	; 134
 6d6:	51 f0       	breq	.+20     	; 0x6ec <__FUSE_REGION_LENGTH__+0x2ec>
 6d8:	31 ff       	sbrs	r19, 1
 6da:	02 c0       	rjmp	.+4      	; 0x6e0 <__FUSE_REGION_LENGTH__+0x2e0>
 6dc:	8b e2       	ldi	r24, 0x2B	; 43
 6de:	01 c0       	rjmp	.+2      	; 0x6e2 <__FUSE_REGION_LENGTH__+0x2e2>
 6e0:	80 e2       	ldi	r24, 0x20	; 32
 6e2:	37 fd       	sbrc	r19, 7
 6e4:	8d e2       	ldi	r24, 0x2D	; 45
 6e6:	b7 01       	movw	r22, r14
 6e8:	90 e0       	ldi	r25, 0x00	; 0
 6ea:	50 d0       	rcall	.+160    	; 0x78c <fputc>
 6ec:	a5 14       	cp	r10, r5
 6ee:	30 f4       	brcc	.+12     	; 0x6fc <__FUSE_REGION_LENGTH__+0x2fc>
 6f0:	b7 01       	movw	r22, r14
 6f2:	80 e3       	ldi	r24, 0x30	; 48
 6f4:	90 e0       	ldi	r25, 0x00	; 0
 6f6:	4a d0       	rcall	.+148    	; 0x78c <fputc>
 6f8:	5a 94       	dec	r5
 6fa:	f8 cf       	rjmp	.-16     	; 0x6ec <__FUSE_REGION_LENGTH__+0x2ec>
 6fc:	aa 94       	dec	r10
 6fe:	f4 01       	movw	r30, r8
 700:	ea 0d       	add	r30, r10
 702:	f1 1d       	adc	r31, r1
 704:	80 81       	ld	r24, Z
 706:	b7 01       	movw	r22, r14
 708:	90 e0       	ldi	r25, 0x00	; 0
 70a:	40 d0       	rcall	.+128    	; 0x78c <fputc>
 70c:	a1 10       	cpse	r10, r1
 70e:	f6 cf       	rjmp	.-20     	; 0x6fc <__FUSE_REGION_LENGTH__+0x2fc>
 710:	33 20       	and	r3, r3
 712:	09 f4       	brne	.+2      	; 0x716 <__FUSE_REGION_LENGTH__+0x316>
 714:	5d ce       	rjmp	.-838    	; 0x3d0 <vfprintf+0x4c>
 716:	b7 01       	movw	r22, r14
 718:	80 e2       	ldi	r24, 0x20	; 32
 71a:	90 e0       	ldi	r25, 0x00	; 0
 71c:	37 d0       	rcall	.+110    	; 0x78c <fputc>
 71e:	3a 94       	dec	r3
 720:	f7 cf       	rjmp	.-18     	; 0x710 <__FUSE_REGION_LENGTH__+0x310>
 722:	f7 01       	movw	r30, r14
 724:	86 81       	ldd	r24, Z+6	; 0x06
 726:	97 81       	ldd	r25, Z+7	; 0x07
 728:	02 c0       	rjmp	.+4      	; 0x72e <__FUSE_REGION_LENGTH__+0x32e>
 72a:	8f ef       	ldi	r24, 0xFF	; 255
 72c:	9f ef       	ldi	r25, 0xFF	; 255
 72e:	2c 96       	adiw	r28, 0x0c	; 12
 730:	0f b6       	in	r0, 0x3f	; 63
 732:	f8 94       	cli
 734:	de bf       	out	0x3e, r29	; 62
 736:	0f be       	out	0x3f, r0	; 63
 738:	cd bf       	out	0x3d, r28	; 61
 73a:	df 91       	pop	r29
 73c:	cf 91       	pop	r28
 73e:	1f 91       	pop	r17
 740:	0f 91       	pop	r16
 742:	ff 90       	pop	r15
 744:	ef 90       	pop	r14
 746:	df 90       	pop	r13
 748:	cf 90       	pop	r12
 74a:	bf 90       	pop	r11
 74c:	af 90       	pop	r10
 74e:	9f 90       	pop	r9
 750:	8f 90       	pop	r8
 752:	7f 90       	pop	r7
 754:	6f 90       	pop	r6
 756:	5f 90       	pop	r5
 758:	4f 90       	pop	r4
 75a:	3f 90       	pop	r3
 75c:	2f 90       	pop	r2
 75e:	08 95       	ret

00000760 <strnlen_P>:
 760:	fc 01       	movw	r30, r24
 762:	05 90       	lpm	r0, Z+
 764:	61 50       	subi	r22, 0x01	; 1
 766:	70 40       	sbci	r23, 0x00	; 0
 768:	01 10       	cpse	r0, r1
 76a:	d8 f7       	brcc	.-10     	; 0x762 <strnlen_P+0x2>
 76c:	80 95       	com	r24
 76e:	90 95       	com	r25
 770:	8e 0f       	add	r24, r30
 772:	9f 1f       	adc	r25, r31
 774:	08 95       	ret

00000776 <strnlen>:
 776:	fc 01       	movw	r30, r24
 778:	61 50       	subi	r22, 0x01	; 1
 77a:	70 40       	sbci	r23, 0x00	; 0
 77c:	01 90       	ld	r0, Z+
 77e:	01 10       	cpse	r0, r1
 780:	d8 f7       	brcc	.-10     	; 0x778 <strnlen+0x2>
 782:	80 95       	com	r24
 784:	90 95       	com	r25
 786:	8e 0f       	add	r24, r30
 788:	9f 1f       	adc	r25, r31
 78a:	08 95       	ret

0000078c <fputc>:
 78c:	0f 93       	push	r16
 78e:	1f 93       	push	r17
 790:	cf 93       	push	r28
 792:	df 93       	push	r29
 794:	fb 01       	movw	r30, r22
 796:	23 81       	ldd	r18, Z+3	; 0x03
 798:	21 fd       	sbrc	r18, 1
 79a:	03 c0       	rjmp	.+6      	; 0x7a2 <fputc+0x16>
 79c:	8f ef       	ldi	r24, 0xFF	; 255
 79e:	9f ef       	ldi	r25, 0xFF	; 255
 7a0:	28 c0       	rjmp	.+80     	; 0x7f2 <fputc+0x66>
 7a2:	22 ff       	sbrs	r18, 2
 7a4:	16 c0       	rjmp	.+44     	; 0x7d2 <fputc+0x46>
 7a6:	46 81       	ldd	r20, Z+6	; 0x06
 7a8:	57 81       	ldd	r21, Z+7	; 0x07
 7aa:	24 81       	ldd	r18, Z+4	; 0x04
 7ac:	35 81       	ldd	r19, Z+5	; 0x05
 7ae:	42 17       	cp	r20, r18
 7b0:	53 07       	cpc	r21, r19
 7b2:	44 f4       	brge	.+16     	; 0x7c4 <fputc+0x38>
 7b4:	a0 81       	ld	r26, Z
 7b6:	b1 81       	ldd	r27, Z+1	; 0x01
 7b8:	9d 01       	movw	r18, r26
 7ba:	2f 5f       	subi	r18, 0xFF	; 255
 7bc:	3f 4f       	sbci	r19, 0xFF	; 255
 7be:	31 83       	std	Z+1, r19	; 0x01
 7c0:	20 83       	st	Z, r18
 7c2:	8c 93       	st	X, r24
 7c4:	26 81       	ldd	r18, Z+6	; 0x06
 7c6:	37 81       	ldd	r19, Z+7	; 0x07
 7c8:	2f 5f       	subi	r18, 0xFF	; 255
 7ca:	3f 4f       	sbci	r19, 0xFF	; 255
 7cc:	37 83       	std	Z+7, r19	; 0x07
 7ce:	26 83       	std	Z+6, r18	; 0x06
 7d0:	10 c0       	rjmp	.+32     	; 0x7f2 <fputc+0x66>
 7d2:	eb 01       	movw	r28, r22
 7d4:	09 2f       	mov	r16, r25
 7d6:	18 2f       	mov	r17, r24
 7d8:	00 84       	ldd	r0, Z+8	; 0x08
 7da:	f1 85       	ldd	r31, Z+9	; 0x09
 7dc:	e0 2d       	mov	r30, r0
 7de:	09 95       	icall
 7e0:	89 2b       	or	r24, r25
 7e2:	e1 f6       	brne	.-72     	; 0x79c <fputc+0x10>
 7e4:	8e 81       	ldd	r24, Y+6	; 0x06
 7e6:	9f 81       	ldd	r25, Y+7	; 0x07
 7e8:	01 96       	adiw	r24, 0x01	; 1
 7ea:	9f 83       	std	Y+7, r25	; 0x07
 7ec:	8e 83       	std	Y+6, r24	; 0x06
 7ee:	81 2f       	mov	r24, r17
 7f0:	90 2f       	mov	r25, r16
 7f2:	df 91       	pop	r29
 7f4:	cf 91       	pop	r28
 7f6:	1f 91       	pop	r17
 7f8:	0f 91       	pop	r16
 7fa:	08 95       	ret

000007fc <__ultoa_invert>:
 7fc:	fa 01       	movw	r30, r20
 7fe:	aa 27       	eor	r26, r26
 800:	28 30       	cpi	r18, 0x08	; 8
 802:	51 f1       	breq	.+84     	; 0x858 <__ultoa_invert+0x5c>
 804:	20 31       	cpi	r18, 0x10	; 16
 806:	81 f1       	breq	.+96     	; 0x868 <__ultoa_invert+0x6c>
 808:	e8 94       	clt
 80a:	6f 93       	push	r22
 80c:	6e 7f       	andi	r22, 0xFE	; 254
 80e:	6e 5f       	subi	r22, 0xFE	; 254
 810:	7f 4f       	sbci	r23, 0xFF	; 255
 812:	8f 4f       	sbci	r24, 0xFF	; 255
 814:	9f 4f       	sbci	r25, 0xFF	; 255
 816:	af 4f       	sbci	r26, 0xFF	; 255
 818:	b1 e0       	ldi	r27, 0x01	; 1
 81a:	3e d0       	rcall	.+124    	; 0x898 <__ultoa_invert+0x9c>
 81c:	b4 e0       	ldi	r27, 0x04	; 4
 81e:	3c d0       	rcall	.+120    	; 0x898 <__ultoa_invert+0x9c>
 820:	67 0f       	add	r22, r23
 822:	78 1f       	adc	r23, r24
 824:	89 1f       	adc	r24, r25
 826:	9a 1f       	adc	r25, r26
 828:	a1 1d       	adc	r26, r1
 82a:	68 0f       	add	r22, r24
 82c:	79 1f       	adc	r23, r25
 82e:	8a 1f       	adc	r24, r26
 830:	91 1d       	adc	r25, r1
 832:	a1 1d       	adc	r26, r1
 834:	6a 0f       	add	r22, r26
 836:	71 1d       	adc	r23, r1
 838:	81 1d       	adc	r24, r1
 83a:	91 1d       	adc	r25, r1
 83c:	a1 1d       	adc	r26, r1
 83e:	20 d0       	rcall	.+64     	; 0x880 <__ultoa_invert+0x84>
 840:	09 f4       	brne	.+2      	; 0x844 <__ultoa_invert+0x48>
 842:	68 94       	set
 844:	3f 91       	pop	r19
 846:	2a e0       	ldi	r18, 0x0A	; 10
 848:	26 9f       	mul	r18, r22
 84a:	11 24       	eor	r1, r1
 84c:	30 19       	sub	r19, r0
 84e:	30 5d       	subi	r19, 0xD0	; 208
 850:	31 93       	st	Z+, r19
 852:	de f6       	brtc	.-74     	; 0x80a <__ultoa_invert+0xe>
 854:	cf 01       	movw	r24, r30
 856:	08 95       	ret
 858:	46 2f       	mov	r20, r22
 85a:	47 70       	andi	r20, 0x07	; 7
 85c:	40 5d       	subi	r20, 0xD0	; 208
 85e:	41 93       	st	Z+, r20
 860:	b3 e0       	ldi	r27, 0x03	; 3
 862:	0f d0       	rcall	.+30     	; 0x882 <__ultoa_invert+0x86>
 864:	c9 f7       	brne	.-14     	; 0x858 <__ultoa_invert+0x5c>
 866:	f6 cf       	rjmp	.-20     	; 0x854 <__ultoa_invert+0x58>
 868:	46 2f       	mov	r20, r22
 86a:	4f 70       	andi	r20, 0x0F	; 15
 86c:	40 5d       	subi	r20, 0xD0	; 208
 86e:	4a 33       	cpi	r20, 0x3A	; 58
 870:	18 f0       	brcs	.+6      	; 0x878 <__ultoa_invert+0x7c>
 872:	49 5d       	subi	r20, 0xD9	; 217
 874:	31 fd       	sbrc	r19, 1
 876:	40 52       	subi	r20, 0x20	; 32
 878:	41 93       	st	Z+, r20
 87a:	02 d0       	rcall	.+4      	; 0x880 <__ultoa_invert+0x84>
 87c:	a9 f7       	brne	.-22     	; 0x868 <__ultoa_invert+0x6c>
 87e:	ea cf       	rjmp	.-44     	; 0x854 <__ultoa_invert+0x58>
 880:	b4 e0       	ldi	r27, 0x04	; 4
 882:	a6 95       	lsr	r26
 884:	97 95       	ror	r25
 886:	87 95       	ror	r24
 888:	77 95       	ror	r23
 88a:	67 95       	ror	r22
 88c:	ba 95       	dec	r27
 88e:	c9 f7       	brne	.-14     	; 0x882 <__ultoa_invert+0x86>
 890:	00 97       	sbiw	r24, 0x00	; 0
 892:	61 05       	cpc	r22, r1
 894:	71 05       	cpc	r23, r1
 896:	08 95       	ret
 898:	9b 01       	movw	r18, r22
 89a:	ac 01       	movw	r20, r24
 89c:	0a 2e       	mov	r0, r26
 89e:	06 94       	lsr	r0
 8a0:	57 95       	ror	r21
 8a2:	47 95       	ror	r20
 8a4:	37 95       	ror	r19
 8a6:	27 95       	ror	r18
 8a8:	ba 95       	dec	r27
 8aa:	c9 f7       	brne	.-14     	; 0x89e <__ultoa_invert+0xa2>
 8ac:	62 0f       	add	r22, r18
 8ae:	73 1f       	adc	r23, r19
 8b0:	84 1f       	adc	r24, r20
 8b2:	95 1f       	adc	r25, r21
 8b4:	a0 1d       	adc	r26, r0
 8b6:	08 95       	ret

000008b8 <_exit>:
 8b8:	f8 94       	cli

000008ba <__stop_program>:
 8ba:	ff cf       	rjmp	.-2      	; 0x8ba <__stop_program>
